{"version":3,"sources":["components/WelcomePopup.tsx","components/Welcome.tsx","components/MajorDropdown.tsx","styles.ts","utils/useFocus.ts","NewCourseForm.tsx","AddNewCourse.tsx","utils/arrayUtils.ts","state/appStateReducer.tsx","state/AppStateContext.tsx","state/actions.ts","utils/useItemDrag.ts","utils/isHidden.ts","CourseCard.tsx","NewSemesterTitleForm.tsx","EditSemesterTitle.tsx","SemesterList.tsx","CustomDragLayer.tsx","components/SemesterContainer.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WelcomePopup","useState","show","setShow","style","styles","popup","ToastContainer","position","className","Toast","onClose","ToastHeader","Body","color","Welcome","welcome","width","padding","margin","background","borderRadius","display","flexDirection","alignItems","fontSize","MajorDropdown","dropdown","options","value","placeholder","border","AppContainer","styled","div","SemesterTitle","DragPreviewContainer","props","isPreview","undefined","isHidden","DragPreviewWrapper","attrs","x","y","transform","SemesterContainer","CourseCardContainer","AddCourseButton","button","dark","EditSemesterButton","NewCourseFormContainer","NewCourseButton","NewCourseInput","input","CustomDragLayerContainer","useFocus","ref","useRef","useEffect","current","focus","NewCourseForm","onAdd","text","setText","inputRef","onChange","e","target","onKeyPress","event","key","onClick","AddNewCourse","showForm","setShowForm","toggleButtonText","findItemIndexById","items","id","findIndex","item","moveItem","array","from","to","index","slice","insertItemAtIndex","removeItemAtIndex","appStateReducer","draft","action","type","draggedItem","payload","nanoid","lists","push","courses","list","listId","targetListIndex","filter","draggedId","hoverId","dragIndex","hoverIndex","draggedItemId","hoveredItemId","sourceColumnId","targetColumnId","sourceListIndex","splice","AppStateContext","createContext","appData","useAppState","useContext","AppStateProvider","children","useImmerReducer","state","dispatch","Provider","getCoursesByListId","find","setDraggedItem","moveTask","useItemDrag","useDrag","end","drag","preview","getEmptyImage","captureDraggingState","itemType","Boolean","CourseCard","semesterId","useDrop","accept","hover","drop","NewTitleForm","EditSemesterTitle","Semester","length","Row","Col","editList","Button","deleteList","map","task","addTask","fontColor","CustomDragLayer","currentOffset","useDragLayer","monitor","getSourceClientOffset","addList","deleteButton","backgroundColor","bottom","left","Footer","footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","backend","Backend","document","getElementById"],"mappings":"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","file":"static/js/main.75000cfe.chunk.js","sourcesContent":["import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport function WelcomePopup(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div style={styles.popup}>\n            <ToastContainer position=\"top-end\" className=\"m-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)}>\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome to the UD CIS Scheduler!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                    Please select a major to get started. Required courses will populate for you to build a schedule.\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\nconst styles = {\n    popup: {\n        //background: \"black\",\n        color: \"blue\",\n    },\n} as const;\n","import React from \"react\";\n\nexport function Welcome(): JSX.Element {\n    return(\n        <div style={styles.welcome}>\n            <p>UD CIS Scheduler</p>\n        </div>\n    );\n}\n\nconst styles = {\n    welcome: {\n        width: \"80%\",\n        padding: \"0px 0px\",\n        margin: \"50px auto\",\n        background: \"white\",\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 30,\n    },\n} as const;","import React from \"react\";\nimport DropdownBox from \"react-dropdown\";\n\n\nexport function MajorDropdown(): JSX.Element {\n    const options =[\"BS CS\", \"BS w/AI Concentration\", \"BS w/Bioinformatics Concentration\",\"BS w/Cybersecurity Concentration\", \"BS w/Data Science Concentration\", \"BS w/High Performance Computing Concentration\", \"BS w/Systems and Networks Concentration\", \"BS w/Theory and Computation Concentration\"];\n    const defaultOption = \"Click Here\";\n    return(\n        <div style={styles.dropdown}>\n            <h3>Major Selector</h3>\n            <DropdownBox options={options} value={defaultOption} placeholder=\"Select an option\" />\n        </div>\n    );\n}\n\nconst styles = {\n    dropdown: {\n        width: \"40%\",\n        //padding: \"0px 0px\",\n        margin: \"10px auto\",\n        background: \"tan\",\n        borderRadius: \"111px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 20,\n        border: \"10px solid black\",\n    },\n} as const;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n    align-items: flex-start;\n    background-color: #3179ba;\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    padding: 20px;\n    width: 100%;\n`;\nexport const SemesterTitle = styled.div`\npadding: 6px 16px 12px;\nfont-weight: bold;\n`;\ntype DragPreviewContainerProps = {\n    isHidden?: boolean\n    isPreview?: boolean\n}\nexport const DragPreviewContainer = styled.div<DragPreviewContainerProps>`\n    transform: ${props => props.isPreview ? \"rotate(0deg)\" : undefined};\n    opacity: ${props => props.isHidden ? 0 : 1};\n`;\n\ntype DragPreviewWrapperProps = {\n    position: {\n        x: number\n        y: number\n    }\n}\nexport const DragPreviewWrapper = styled.div.attrs<DragPreviewWrapperProps>(\n    ({ position: { x, y } }) => ({\n        style: {\n            transform: `translate(${x}px, ${y}px)`\n        }\n    })\n) <DragPreviewWrapperProps>``;\n\nexport const SemesterContainer = styled(DragPreviewContainer)`\n    background-color: #ebecf0;\n    width: 300px;\n    min-height: 40px;\n    margin-right: 20px;\n    border-radius: 3px;\n    padding: 8px 8px;\n    flex-grow: 0;\n`;\n\n\nexport const CourseCardContainer = styled(DragPreviewContainer)`\n    background-color: #fff;\n    cursor: pointer;\n    margin-bottom: 0.5rem;\n    padding: 0.5rem 1rem;\n    max-width: 300px;\n    border-radius: 3px;\n    box-shadow: #091e4240 0px 1px 0px 0px;\n`;\n\ntype AddItemButtonProps = {\n    dark?: boolean\n}\n\nexport const AddCourseButton = styled.button<AddItemButtonProps>`\n    background-color: #ffffff3d;\n    border-radius: 3px;\n    border: none;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"};\n    cursor: pointer;\n    max-width: 300px;\n    padding: 10px 12px;\n    text-align: left;\n    transition: background 85ms ease-in;\n    width: 100%;\n    &:hover {\n    background-color: #ffffff52;\n    }\n`;\nexport const EditSemesterButton = styled.button<AddItemButtonProps>`\n    background-color: #3498DB;\n    border-radius: 3px;\n    border: none;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"};\n    cursor: pointer;\n    max-width: 300px;\n    padding: 10px 12px;\n    text-align: center;\n    transition: background 85ms ease-in;\n    width: 100%;\n    &:hover {\n    background-color: #00000000;\n    }\n`;\nexport const NewCourseFormContainer = styled.div`\n    max-width: 300px;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: flex-start;\n`;\n\nexport const NewCourseButton = styled.button`\n    background-color: #5aac44;\n    border-radius: 3px;\n    border: none;\n    box-shadow: none;\n    color: #fff;\n    padding: 6px 12px;\n    text-align: center;\n`;\nexport const NewCourseInput = styled.input`\n    border-radius: 3px;\n    border: none;\n    box-shadow: #091e4240 0px 1px 0px 0px;\n    margin-bottom: 0.5rem;\n    padding: 0.5rem 1rem;\n    width: 100%;\n`;\nexport const CustomDragLayerContainer = styled.div`\n    height: 100%;\n    left: 0;\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 100;\n`;//rendered first\n","import { useRef, useEffect } from \"react\";\n\n//refs react hook to reference DOM nodes of rendered React elements\nexport const useFocus = ():React.RefObject<HTMLInputElement> => {\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        ref.current?.focus();//ref will be immutable, use ?. to access it\n    }, []);\n    return ref;\n};\n//access the rendered input element","import React, { useState } from \"react\";\nimport { NewCourseFormContainer, NewCourseButton, NewCourseInput } from \"./styles\";\nimport { useFocus } from \"./utils/useFocus\";\n\n\ntype NewCourseFormProps = {\n    onAdd(text: string): void\n}\n\nexport const NewCourseForm = ({ onAdd }: NewCourseFormProps): JSX.Element => {\n    const [text, setText] = useState(\"\");\n    const inputRef = useFocus();\n    //add enter key for create\n    const handleAddText = (\n        event: React.KeyboardEvent<HTMLInputElement>\n    ) => {\n        if (event.key === \"Enter\") {\n            onAdd(text);\n        }\n    };\n        \n    return (\n        <NewCourseFormContainer>\n            <NewCourseInput\n                ref={inputRef}\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                onKeyPress={handleAddText}\n            />\n            <NewCourseButton onClick={() => onAdd(text)}>\n                Create\n            </NewCourseButton>\n        </NewCourseFormContainer>\n    );\n};\n","import React, { useState} from \"react\";\nimport { AddCourseButton } from \"./styles\";\nimport { NewCourseForm } from \"./NewCourseForm\";\n\n\ntype AddNewCourseProps = {\n    onAdd(text: string): void\n    toggleButtonText: string\n    dark?: boolean\n    }\n\nexport const AddNewCourse = (props: AddNewCourseProps): JSX.Element => {\n    const [showForm, setShowForm] = useState(false);\n    const { onAdd, toggleButtonText, dark } = props;\n    \n    if (showForm) {\n        return (\n            <NewCourseForm\n                onAdd={text => {\n                    onAdd(text);\n                    setShowForm(false);\n                }}\n            />\n        );\n    }\n        \n    \n    return (\n        <AddCourseButton dark={dark} onClick={() => setShowForm(true)}>\n            {toggleButtonText}\n        </AddCourseButton>\n    );\n};\n","type Item = {\n    id: string\n}\n\nexport const findItemIndexById = <TItem extends Item>(\n    items: TItem[],\n    id: string\n):number => {\n    return items.findIndex((item: TItem) => item.id === id);\n};\nexport const moveItem = <TItem>(array: TItem[], from: number, to: number): TItem[] => {\n    const item = array[from];\n    return insertItemAtIndex(removeItemAtIndex(array, from), item, to);\n};\n\nexport function removeItemAtIndex<TItem>(array: TItem[], index: number)\n:TItem[]{\n    return [...array.slice(0, index), ...array.slice(index + 1)];\n}\n\nexport function insertItemAtIndex<TItem>(\n    array: TItem[],\n    item: TItem,\n    index: number\n): TItem[] {\n    return [...array.slice(0, index), item, ...array.slice(index)];\n}\n    ","//import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { findItemIndexById, moveItem } from \"../utils/arrayUtils\";\nimport { DragItem } from \"../DragItem\";\nimport { Action } from \"./actions\";\n\nexport type Task = {\n    id: string\n    text: string\n}\n\nexport type List = {\n    id: string\n    text: string\n    courses: Task[]\n}\n\nexport type AppState = {\n    draggedItem: DragItem | null\n    lists: List[]\n}\n\nexport const appStateReducer = (\n    draft: AppState,\n    action: Action\n): AppState | void => {\n    switch (action.type) {\n    case \"SET_DRAGGED_ITEM\": {\n        draft.draggedItem = action.payload;\n        break;\n    }\n    case \"ADD_LIST\": {\n        const id=nanoid();\n        draft.lists.push({\n            id: id,\n            text: action.payload,\n            courses: [],\n        });\n        break;\n    }\n    case \"EDIT_LIST\": {\n        const {text, id } = action.payload;\n        const index = draft.lists.findIndex(list => list.id === id);\n        draft.lists[index].text=text;\n        break;\n    }\n    case \"ADD_TASK\": {\n        const { text, listId } = action.payload;\n        const targetListIndex = findItemIndexById(draft.lists, listId);\n        draft.lists[targetListIndex].courses.push({\n            id: nanoid(),\n            text\n        });\n        break;\n    }\n    case \"DELETE_LIST\": {\n        const id = action.payload;\n        draft.lists=draft.lists.filter(list => list.id !== id);\n        break;\n    }\n    case \"DELETE_ALL_LISTS\": {\n        draft.lists=draft.lists.slice(0,1);\n        break;\n    }\n    case \"MOVE_LIST\": {\n        const { draggedId, hoverId } = action.payload;\n        const dragIndex = findItemIndexById(draft.lists, draggedId);\n        const hoverIndex = findItemIndexById(draft.lists, hoverId);\n        draft.lists = moveItem(draft.lists, dragIndex, hoverIndex);\n        break;\n    }\n    case \"MOVE_TASK\": {\n        const {\n            draggedItemId,\n            hoveredItemId,\n            sourceColumnId,\n            targetColumnId\n        } = action.payload;\n\n        const sourceListIndex = findItemIndexById(\n            draft.lists,\n            sourceColumnId\n        );\n        const targetListIndex = findItemIndexById(\n            draft.lists,\n            targetColumnId\n        );\n\n        const dragIndex = findItemIndexById(\n            draft.lists[sourceListIndex].courses,\n            draggedItemId\n        );\n\n        const hoverIndex = hoveredItemId\n            ? findItemIndexById(\n                draft.lists[targetListIndex].courses,\n                hoveredItemId\n            )\n            : 0;\n        const item = draft.lists[sourceListIndex].courses[dragIndex];\n\n        // Remove the task from the source list\n        draft.lists[sourceListIndex].courses.splice(dragIndex, 1);\n\n        // Add the task to the target list\n        draft.lists[targetListIndex].courses.splice(hoverIndex, 0, item);\n        break;\n    }\n    default: {\n        break;\n    }\n    }\n};\n","import React, { createContext, useContext, Dispatch, FC } from \"react\";\nimport { Action } from \"./actions\";\nimport { useImmerReducer } from \"use-immer\";\nimport {\n    appStateReducer,\n    AppState,\n    List,\n    Task\n} from \"./appStateReducer\";\nimport { DragItem } from \"../DragItem\";\n\nconst AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps);\n\nexport function deleteSemester(id: string): void {\n    const left = appData.lists\n        .filter(list => list.id !== id);\n    appData.lists= left;\n}\n\nexport const appData: AppState = {\n    draggedItem: null,\n    lists: [\n        {\n            id: \"0\",\n            text: \"Course List\",\n            courses: [{id: \"c1\", text: \"CISC108: 3 credits\"},{id: \"c2\", text: \"EGGG101: 2 credits\"},{id: \"c3\", text: \"MATH241: 4 credits\"},{id: \"c4\", text: \"ENGL110: 3 credits\"},{id: \"c5\", text: \"Breadth Requirement (CAH) Course: 3 credits\"},{id: \"c6\", text: \"CISC181: 3 credits\"},{id: \"c7\", text: \"CISC210: 3 credits\"},{id: \"c8\", text: \"MATH242: 4 credits\"},{id: \"c9\", text: \"Breadth Requirement (HCC) Course: 3 credits\"},{id: \"c10\", text: \"Breadth Requirement (SBS) Course: 3 credits\"},{id: \"c11\", text: \"CISC220: 3 credits\"},{id: \"c12\", text: \"CISC260: 3 credits\"},{id: \"c13\", text: \"MATH210: 3 credits\"},{id: \"c14\", text: \"Science Requirement Course 1: 4 credits\"},{id: \"c15\", text: \"MATH243: 4 credits\"},{id: \"c16\", text: \"CISC355: 3 credits\"},{id: \"c17\", text: \"CISC275: 3 credits\"},{id: \"c18\", text: \"MATH205: 4 credits\"},{id: \"c19\", text: \"MATH350: 3 credits\"},{id: \"c20\", text: \"Science Requirement Course 2: 4 credits\"},{id: \"c21\", text: \"Breadth Requirement (MC) Course: 3 credits\"}]\n        },\n        {\n            id: \"1\",\n            text: \"Degree Requirements\",\n            courses: [{id: \"c22\", text: \"CISC108 is a prerequisite for CISC181 and CISC210.\"},{id: \"c23\", text: \"MATH241 is a prerequisite for MATH242.\"},{id: \"c24\", text: \"CISC210 is a prerequisite for CISC220 and CISC260.\"},{id: \"c25\", text: \"MATH241 and MATH242 are prerequisites for MATH210.\"},{id: \"c26\", text: \"MATH242 is a prerequisite for MATH243.\"},{id: \"c27\", text: \"CISC181 and CISC220 are prerequisites for CISC275.\"},{id: \"c28\", text: \"MATH210 is a prerequisite for MATH205.\"},{id: \"c29\", text: \"MATH243 is a prerequisite for MATH350.\"}]\n        },\n        {\n            id: \"2\",\n            text: \"Course Prerequisites\",\n            courses: [{id: \"c30\", text: \"EGGG101 satisfies the First Year Seminar (FYS).\"},{id: \"c31\", text: \"ENGL110 is required for all students and should be taken in the first year.\"},{id: \"c32\", text: \"The CAH, HCC, and SBS breadth, and Multicultural requirements are required for the College, University Breadth, and University Requirements.\"},{id: \"c33\", text: \"2 science courses with labs can satisfy one laboratory science sequence.\"},{id: \"c34\", text: \"A laboratory science sequence is required for the science courses.\"}]\n        },\n        {\n            id: \"3\",\n            text: \"Year 1: Fall Semester\",\n            courses: [{id: \"c35\", text: \"Learn TypeScript\"}]\n        },\n        {\n            id: \"4\",\n            text: \"Year 1: Spring Semester\",\n            courses: [{id: \"c36\", text: \"Learn static typing\"}]\n        } \n    ]\n};\n\ntype AppStateContextProps = {\n    draggedItem: DragItem | null\n    lists: List[]\n    getCoursesByListId(id: string): Task[]\n    dispatch: Dispatch<Action>\n}\n\n    \n//making sure we can access data globally\nexport const useAppState = (): AppStateContextProps => {\n    return useContext(AppStateContext);\n};\n\nexport const AppStateProvider: FC = ({ children }) => {\n    const [state, dispatch] = useImmerReducer(appStateReducer, appData);\n    \n    const { draggedItem, lists } = state;\n    const getCoursesByListId = (id: string) => {\n        return lists.find((list) => list.id === id)?.courses || [];\n    };\n    return (\n        <AppStateContext.Provider value={{ draggedItem, lists, getCoursesByListId, dispatch }}>\n            {children}\n        </AppStateContext.Provider>\n    );\n};\n","import { DragItem } from \"../DragItem\";\n\n//an action now can resort to one of the forms we passed in, the list or task\nexport type Action =\n    | {\n        type: \"MOVE_TASK\"\n        payload: {\n            draggedItemId: string\n            hoveredItemId: string | null\n            sourceColumnId: string\n            targetColumnId: string\n        }\n    }\n    | {\n        type: \"ADD_LIST\"\n        payload: string\n    }\n    | {\n        type: \"ADD_TASK\"\n        payload: { text: string; listId: string }\n    }\n    | {\n        type: \"MOVE_LIST\"\n        payload: {\n            draggedId: string\n            hoverId: string\n        }\n    }\n    | {\n        type: \"SET_DRAGGED_ITEM\"\n        payload: DragItem | null\n    }\n    | {\n        type: \"DELETE_ALL_LISTS\"\n    }\n    | {\n        type: \"DELETE_LIST\"\n        payload: string\n    }\n    | {\n        type: \"EDIT_LIST\"\n        payload: {\n            text: string\n            id: string\n        }\n    }\n\n/*what I had before I decided to use a discriminated union which\nallows the Typescript to look at the property and understand the other fields\n    interface AddListAction {\n        type: \"ADD_LIST\"\n        payload: string\n    }\n\n    interface AddTaskAction {\n        type: \"ADD_LIST\"\n        payload: { text: string; listId: string }\n    }\n\n    type Action = AddListAction | AddTaskAction\n\n*/\n\n\nexport const addTask = (\n    text: string,\n    listId: string,\n): Action => ({\n    type: \"ADD_TASK\",\n    payload: {\n        text,\n        listId\n    }\n});\n\nexport const addList = (\n    text: string,\n): Action => ({\n    type: \"ADD_LIST\",\n    payload: text\n});\n\nexport const editList = (\n    text: string,\n    id: string,\n): Action => ({\n    type: \"EDIT_LIST\",\n    payload: {\n        text,\n        id\n    }\n});\n\nexport const deleteList = (\n    id: string,\n): Action => ({\n    type: \"DELETE_LIST\",\n    payload: id\n});\n\nexport const deleteLists = (): Action => ({\n    type: \"DELETE_ALL_LISTS\",\n});\n\nexport const moveList = (\n    draggedId: string,\n    hoverId: string,\n): Action => ({\n    type: \"MOVE_LIST\",\n    payload: {\n        draggedId,\n        hoverId,\n    }\n});\n\nexport const setDraggedItem = (\n    draggedItem: DragItem | null,\n): Action => ({\n    type: \"SET_DRAGGED_ITEM\",\n    payload: draggedItem\n});\n\nexport const moveTask = (\n    draggedItemId: string,\n    hoveredItemId: string | null,\n    sourceColumnId: string,\n    targetColumnId: string\n): Action => ({\n    type: \"MOVE_TASK\",\n    payload: {\n        draggedItemId,\n        hoveredItemId,\n        sourceColumnId,\n        targetColumnId\n    }\n});\n","import { ConnectDragSource, useDrag } from \"react-dnd\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { DragItem } from \"../DragItem\";\nimport { setDraggedItem } from \"../state/actions\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport { useEffect } from \"react\";\nexport const useItemDrag = (item: DragItem): {drag: ConnectDragSource} => {\n    const { dispatch } = useAppState();\n    const [, drag, preview] = useDrag({\n        type: item.type,\n        item: () => {\n            dispatch(setDraggedItem(item));\n            return item;\n        },\n        end: () => dispatch(setDraggedItem(null))\n    });\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n    }, [preview]);\n    return { drag };\n};","import { DragItem } from \"../DragItem\";\nexport const isHidden = (\n    draggedItem: DragItem | null,\n    itemType: string,\n    id: string,\n    isPreview?: boolean\n): boolean => {\n    return Boolean(\n        !isPreview &&\n        draggedItem &&\n        draggedItem.type === itemType &&\n        draggedItem.id === id\n    );\n};\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { CourseCardContainer } from \"./styles\";\nimport { useItemDrag } from \"./utils/useItemDrag\";\nimport { useDrop } from \"react-dnd\";\nimport { useAppState } from \"./state/AppStateContext\";\nimport { isHidden } from \"./utils/isHidden\";\nimport { moveTask } from \"./state/actions\";\n\ntype CourseCardProps = {\n    text: string\n    id: string\n    semesterId: string\n    isPreview?: boolean\n}\n\nexport const CourseCard = ({\n    text,\n    id,\n    semesterId,\n    isPreview\n}: CourseCardProps): JSX.Element => {\n    const { draggedItem, dispatch } = useAppState();\n    const ref = useRef<HTMLDivElement>(null);\n    const { drag } = useItemDrag({\n        type: \"COURSECARD\",\n        id,\n        text,\n        semesterId\n    });\n    const [, drop] = useDrop({\n        accept: \"COURSECARD\",\n        hover() {\n            if (!draggedItem) {\n                return;\n            }\n            if (draggedItem.type !== \"COURSECARD\") {\n                return;\n            }\n            if (draggedItem.id === id) {\n                return;\n            }\n\n            dispatch(\n                moveTask(draggedItem.id, id, draggedItem.semesterId, semesterId)\n            );\n        }\n    });\n\n    drag(drop(ref));\n\n    return (\n        <CourseCardContainer\n            isHidden={isHidden(draggedItem, \"COURSECARD\", id, isPreview)}\n            isPreview={isPreview}\n            ref={ref}\n        >\n            {text}\n        </CourseCardContainer>\n    );\n};\n","import React, { useState } from \"react\";\nimport { NewCourseFormContainer, NewCourseButton, NewCourseInput } from \"./styles\";\nimport { useFocus } from \"./utils/useFocus\";\n\n\ntype NewCourseFormProps = {\n    onAdd(text: string): void\n}\n\nexport const NewTitleForm = ({ onAdd }: NewCourseFormProps): JSX.Element => {\n    const [text, setText] = useState(\"\");\n    const inputRef = useFocus();\n    //add enter key for create\n    const handleAddText = (\n        event: React.KeyboardEvent<HTMLInputElement>\n    ) => {\n        if (event.key === \"Enter\") {\n            onAdd(text);\n        }\n    };\n        \n    return (\n        <NewCourseFormContainer>\n            <NewCourseInput\n                ref={inputRef}\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                onKeyPress={handleAddText}\n            />\n            <NewCourseButton onClick={() => onAdd(text)}>\n                Enter\n            </NewCourseButton>\n        </NewCourseFormContainer>\n    );\n};\n","import React, { useState} from \"react\";\nimport { EditSemesterButton } from \"./styles\";\nimport { NewTitleForm } from \"./NewSemesterTitleForm\";\n\ntype EditSemesterTitleProps = {\n    onAdd(text: string): void\n    toggleButtonText: string\n    dark?: boolean\n    }\n\nexport const EditSemesterTitle = (props: EditSemesterTitleProps): JSX.Element => {\n    const [showForm, setShowForm] = useState(false);\n    const { onAdd, toggleButtonText} = props;\n    \n    if (showForm) {\n        return (\n            <NewTitleForm\n                onAdd={text => {\n                    onAdd(text);\n                    setShowForm(false);\n                }}\n            />\n        );\n    }\n    \n    return (\n        <EditSemesterButton dark={false} onClick={() => setShowForm(true)}>\n            {toggleButtonText}\n        </EditSemesterButton>\n    );\n};\n","import React, { useRef} from \"react\";\nimport { SemesterContainer, SemesterTitle } from \"./styles\";\nimport { useAppState } from \"./state/AppStateContext\";\nimport { CourseCard } from \"./CourseCard\";\nimport { AddNewCourse } from \"./AddNewCourse\";\nimport { EditSemesterTitle } from \"./EditSemesterTitle\";\nimport { useItemDrag } from \"./utils/useItemDrag\";\nimport { useDrop } from \"react-dnd\";\nimport { isHidden } from \"./utils/isHidden\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport { deleteList, editList } from \"./state/actions\";\n\nimport {\n    addTask,\n    moveTask,\n    moveList,\n    setDraggedItem\n} from \"./state/actions\";\n\ntype SemesterProps = {\n    text: string\n    id: string\n    isPreview?: boolean\n} \n\nexport const Semester = ({ text, id, isPreview }: SemesterProps): JSX.Element => {\n    const { draggedItem, getCoursesByListId, dispatch } = useAppState();\n    const courses = getCoursesByListId(id);\n    const ref = useRef<HTMLDivElement>(null);\n    const [, drop] = useDrop({\n        accept: [\"SEMESTER\", \"COURSECARD\"],\n        hover() {\n            if (!draggedItem) {\n                return;\n            }\n            if (draggedItem.type === \"SEMESTER\") {\n                if (draggedItem.id === id) {\n                    return;\n                }\n\n                dispatch(moveList(draggedItem.id, id));\n            } else {\n                if (draggedItem.semesterId === id) {\n                    return;\n                }\n                if (courses.length) {\n                    return;\n                }\n\n                dispatch(\n                    moveTask(draggedItem.id, null, draggedItem.semesterId, id)\n                );\n                dispatch(setDraggedItem({ ...draggedItem, semesterId: id }));\n            }\n        }\n    });\n\n    const { drag } = useItemDrag({ type: \"SEMESTER\", id, text });\n\n    drag(drop(ref));\n\n    return (\n        <SemesterContainer\n            isPreview={isPreview}\n            ref={ref}\n            isHidden={isHidden(draggedItem, \"SEMESTER\", id, isPreview)}\n        >\n            <Row>\n                <SemesterTitle>{text}</SemesterTitle>\n                <Col>\n                    <EditSemesterTitle\n                        toggleButtonText=\"Edit Title\"\n                        onAdd={(text) => dispatch(editList(text, id))}\n                        dark\n                    />\n                </Col>\n                <Col>\n                    <Button style={styles.button} onClick={() => dispatch(deleteList(id))}>Delete</Button>\n                </Col>\n            </Row>\n            {courses.map(task => \n                <CourseCard\n                    id={task.id}\n                    semesterId={id}\n                    text={task.text}\n                    key={task.id}\n                />\n            )}\n            <AddNewCourse\n                toggleButtonText=\"+ Add another class\"\n                onAdd={(text) => dispatch(addTask(text, id))}\n                dark\n            />\n        </SemesterContainer>\n    );\n};\n\nconst styles = {\n    button: {\n        fontColor: \"red\",\n        width: \"70%\",\n        //padding: \"0px 0px\",\n        margin: \"2px auto 10px\", \n        background: \"red\",\n        borderRadius: \"40px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 18,\n    },\n} as const;\n","import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { Semester } from \"./SemesterList\";\nimport { useAppState } from \"./state/AppStateContext\";\nimport {\n    CustomDragLayerContainer,\n    DragPreviewWrapper\n} from \"./styles\";\nimport { CourseCard } from \"./CourseCard\";\n//import { StyledComponent } from \"styled-components\";\n\n\nexport const CustomDragLayer = (): JSX.Element | null => {\n    const { draggedItem } = useAppState();\n    const { currentOffset } = useDragLayer((monitor) => ({\n        currentOffset: monitor.getSourceClientOffset()\n    }));\n    return draggedItem && currentOffset ? \n        <CustomDragLayerContainer>\n            <DragPreviewWrapper position={currentOffset}>\n                {draggedItem.type === \"SEMESTER\" ? \n                    <Semester\n                        id={draggedItem.id}\n                        text={draggedItem.text}\n                        isPreview\n                    />\n                    :\n                    <CourseCard\n                        semesterId={draggedItem.semesterId}\n                        isPreview\n                        id={draggedItem.id}\n                        text={draggedItem.text}\n                    />\n                }\n            </DragPreviewWrapper>\n        </CustomDragLayerContainer>\n        : null;\n}; \n","import React from \"react\";\nimport { AppContainer } from \"../styles\";\nimport { AddNewCourse } from \"../AddNewCourse\";\nimport { CustomDragLayer } from \"../CustomDragLayer\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { addList, deleteLists } from \"../state/actions\";\nimport { Semester } from \"../SemesterList\";\nimport { Button, Row } from \"react-bootstrap\";\n//import { DeleteSemester } from \"../DeleteSems\"; \n\nexport function SemesterContainer(): JSX.Element {\n    const { lists, dispatch } = useAppState();\n    return( \n        <AppContainer>\n            <CustomDragLayer />\n            {lists.map(list => \n                <Semester key={list.id} id={list.id} text={list.text} />\n            )}\n            <Row>\n                <AddNewCourse\n                    toggleButtonText=\"+ Add another term\"\n                    onAdd={text => dispatch(addList(text))}\n                />\n                <Button style={styles.deleteButton} onClick={() => dispatch(deleteLists())}>\n                    Delete all semesters\n                </Button>\n            </Row>\n        </AppContainer>\n    );\n}\nconst styles = {\n    deleteButton: {\n        backgroundColor: \"red\",\n        margin: \"10px -50px 110px 0px\",\n        bottom: \"10\",\n        left: \"0\",\n        width: \"100%\",\n    },\n} as const;\n","import React from \"react\";\n\nexport function Footer(): JSX.Element {\n    return(\n        <div style={styles.footer}>\n            <br/>\n            <p>Made for CISC275 at the University of Delaware<br/>\n            &copy; 2021 Tyler Rust, Noah Trungold, James Wan\n            </p>\n        </div>\n    );\n}\n\nconst styles = {\n    footer: {\n        backgroundColor: \"lightgreen\",\n        position: \"fixed\",\n        margin: \"auto\",\n        bottom: \"0\",\n        left: \"0\",\n        width: \"100%\",\n    },\n} as const;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./components/WelcomePopup.css\";\nimport { WelcomePopup } from \"./components/WelcomePopup\";\nimport { Welcome } from \"./components/Welcome\";\nimport { MajorDropdown } from \"./components/MajorDropdown\";\nimport { SemesterContainer } from \"./components/SemesterContainer\";\nimport { Footer } from \"./components/Footer\";\n\nexport const App = ():JSX.Element  => {\n    return (\n        <div className = \"App\">\n            <WelcomePopup />\n            <Welcome />\n            <MajorDropdown />\n            <SemesterContainer />\n            <Footer />\n        </div>\n    );\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppStateProvider } from \"./state/AppStateContext\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend as Backend } from \"react-dnd-html5-backend\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <DndProvider backend={Backend}>\n            <AppStateProvider>\n                <App />\n            </AppStateProvider>\n        </DndProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}