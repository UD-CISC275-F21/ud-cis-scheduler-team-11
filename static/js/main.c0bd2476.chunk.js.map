{"version":3,"sources":["components/WelcomePopup.tsx","components/Welcome.tsx","components/MajorDropdown.tsx","styles.ts","utils/useFocus.ts","components/NewCourseForm.tsx","components/AddNewCourse.tsx","utils/arrayUtils.ts","state/appStateReducer.tsx","state/AppStateContext.tsx","state/actions.ts","utils/useItemDrag.ts","utils/isHidden.ts","components/EditCourse.tsx","components/CourseCard.tsx","components/NewSemesterTitleForm.tsx","components/EditSemesterTitle.tsx","components/SemesterList.tsx","components/CustomDragLayer.tsx","components/SemesterContainer.tsx","components/Footer.tsx","components/SpaceBetweenBodyandFooter.tsx","components/RequirementsTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WelcomePopup","useState","show","setShow","style","styles","popup","ToastContainer","position","className","Toast","onClose","ToastHeader","Body","color","fontWeight","Welcome","welcome","width","padding","margin","background","borderRadius","display","flexDirection","alignCourses","fontSize","MajorDropdown","conc","setConcentration","Dropdown","Toggle","dropdown","Menu","box","Header","Item","onClick","alignItems","border","AppContainer","styled","div","SemesterTitle","DragPreviewContainer","props","isPreview","undefined","isHidden","DragPreviewWrapper","attrs","x","y","transform","SemesterContainer","CourseCardContainer","AddCourseButton","button","dark","EditSemesterButton","EditCourseButton","NewCourseFormContainer","NewCourseButton","NewCourseInput","input","CustomDragLayerContainer","useFocus","ref","useRef","useEffect","current","focus","NewCourseForm","onAdd","text","setText","inputRef","value","onChange","e","target","onKeyPress","event","key","AddNewCourse","showForm","setShowForm","toggleButtonText","findCourseIndexById","Courses","id","findIndex","Course","moveCourse","array","from","to","index","slice","insertCourseAtIndex","removeCourseAtIndex","appStateReducer","draft","action","type","draggedItem","payload","nanoid","semesters","push","courses","semester","semesterId","targetSemesterIndex","course","filter","draggedId","hoverId","dragIndex","hoverIndex","draggedCourseId","hoveredCourseId","sourceSemesterId","targetSemesterId","sourceSemesterIndex","splice","AppStateContext","createContext","appData","useAppState","useContext","AppStateProvider","children","useImmerReducer","state","dispatch","Provider","getCoursesBySemesterId","find","addCourse","deleteAllCourses","editSemester","setDraggedItem","useItemDrag","item","useDrag","end","drag","preview","getEmptyImage","captureDraggingState","itemType","Boolean","EditCourse","CourseCard","useDrop","accept","hover","drop","Row","editCourse","Button","softDeleteButton","softDeleteCourse","deleteButton","deleteCourse","float","fontColor","NewTitleForm","EditSemesterTitle","Semester","length","Col","deleteAllCoursesButton","line","map","deleteSemesterButton","deleteSemester","height","backgroundColor","CustomDragLayer","currentOffset","useDragLayer","monitor","getSourceClientOffset","addSemester","bottom","left","Footer","footer","boxSizing","Space","RequirementsTable","container","title","marginRight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","backend","Backend","document","getElementById"],"mappings":"wTAMO,SAASA,IACZ,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qBAAKC,MAAOC,EAAOC,MAAnB,SACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,UAAUC,UAAU,MAA7C,SACI,eAACC,EAAA,EAAD,CAAOR,MAAOA,EAAMS,QAAS,kBAAIR,GAASD,IAA1C,UACI,cAACU,EAAA,EAAD,UACI,wBAAQH,UAAU,UAAlB,gDAEJ,cAACC,EAAA,EAAMG,KAAP,uHAQpB,IAAMR,EAAS,CACXC,MAAO,CAEHQ,MAAO,SACPC,WAAY,MCzBb,SAASC,IACZ,OACI,qBAAKZ,MAAOC,EAAOY,QAAnB,SACI,mDAKZ,IAAMZ,EAAS,CACXY,QAAS,CACLC,MAAO,MACPC,QAAS,mBACTC,OAAQ,OACRC,WAAY,QACZC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfC,aAAc,SACdC,SAAU,K,QCjBX,SAASC,IAkBZ,MAAiC1B,mBAAwB,gCAAzD,mBAAO2B,EAAP,KAAaC,EAAb,KACA,OAUI,aATA,CASA,gBACI,eAACC,EAAA,EAAD,WACK,cAACA,EAAA,EAASC,OAAV,CAAiB3B,MAAOC,EAAO2B,SAA/B,SACIJ,IAEL,eAACE,EAAA,EAASG,KAAV,CAAe7B,MAAOC,EAAO6B,IAA7B,UACI,cAACJ,EAAA,EAASK,OAAV,4BACA,cAACL,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,0BAApE,mCACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,+CAApE,kDACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,sCAApE,4BACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,qCAApE,2BACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,oCAApE,2BACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,kDAApE,wCACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,4CAApE,gDACA,cAACC,EAAA,EAASM,KAAV,CAAe,cAAY,SAASC,QAAS,kBAAMR,EAAiB,8CAApE,4CAiBpB,I,0BAAMxB,EAAS,CACX2B,SAAU,CACNZ,OAAQ,YACRC,WAAY,MACZC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfc,WAAY,SACZZ,SAAU,GACVa,OAAQ,mBACRzB,MAAO,QACPC,WAAY,KAEhBmB,IAAK,CACDZ,aAAc,OACdiB,OAAQ,kBACRlB,WAAY,YACZK,SAAU,K,eC9ELc,EAAeC,IAAOC,IAAV,iMASZC,EAAgBF,IAAOC,IAAV,yEAQbE,EAAuBH,IAAOC,IAAV,oEAChB,SAAAG,GAAK,OAAIA,EAAMC,UAAY,oBAAiBC,KAC9C,SAAAF,GAAK,OAAIA,EAAMG,SAAW,EAAI,KAShCC,EAAqBR,IAAOC,IAAIQ,OACzC,oBAAG1C,SAAY2C,EAAf,EAAeA,EAAGC,EAAlB,EAAkBA,EAAlB,MAA6B,CACzBhD,MAAO,CACHiD,UAAU,aAAD,OAAeF,EAAf,eAAuBC,EAAvB,WAHaX,CAAH,0BAQlBa,EAAoBb,YAAOG,EAAPH,CAAH,kMAWjBc,EAAsBd,YAAOG,EAAPH,CAAH,kOAcnBe,EAAkBf,IAAOgB,OAAV,4UAIf,SAAAZ,GAAK,OAAIA,EAAMa,KAAO,OAAS,UAW/BC,EAAqBlB,IAAOgB,OAAV,4UAIlB,SAAAZ,GAAK,OAAIA,EAAMa,KAAO,OAAS,UAW/BE,EAAmBnB,IAAOgB,OAAV,2RAIhB,SAAAZ,GAAK,OAAIA,EAAMa,KAAO,OAAS,UAU/BG,EAAyBpB,IAAOC,IAAV,oJAQtBoB,EAAkBrB,IAAOgB,OAAV,kMASfM,EAAiBtB,IAAOuB,MAAV,6LAQdC,EAA2BxB,IAAOC,IAAV,gKCjIxBwB,EAAW,WACpB,IAAMC,EAAMC,iBAAyB,MAKrC,OAHAC,qBAAU,WAAO,IAAD,EACZ,UAAAF,EAAIG,eAAJ,SAAaC,UACd,IACIJ,GCAEK,EAAgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAC5B,EAAwBxE,mBAAS,IAAjC,mBAAOyE,EAAP,KAAaC,EAAb,KACMC,EAAWV,IAUjB,OACI,eAACL,EAAD,WACI,cAACE,EAAD,CACII,IAAKS,EACLC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,WAdU,SAClBC,GAEkB,UAAdA,EAAMC,KACNV,EAAMC,MAYN,cAACZ,EAAD,CAAiBzB,QAAS,kBAAMoC,EAAMC,IAAtC,wBClBCU,EAAe,SAACvC,GACzB,MAAgC5C,oBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACQb,EAAkC5B,EAAlC4B,MAAOc,EAA2B1C,EAA3B0C,iBAAkB7B,EAASb,EAATa,KAEjC,OAAI2B,EAEI,cAAC,EAAD,CACIZ,MAAK,+GAAE,SAAAC,GACHD,EAAMC,GACNY,GAAY,QAQxB,cAAC9B,EAAD,CAAiBE,KAAMA,EAAMrB,QAAS,kBAAMiD,GAAY,IAAxD,SACKC,K,wCCzBAC,GAAsB,SAC/BC,EACAC,GAEA,OAAOD,EAAQE,WAAU,SAACC,GAAD,OAAqBA,EAAOF,KAAOA,MAEnDG,GAAa,SAAUC,EAAkBC,EAAcC,GAChE,IAAMJ,EAASE,EAAMC,GACrB,OAQG,SACHD,EACAF,EACAK,GAEA,MAAM,GAAN,oBAAWH,EAAMI,MAAM,EAAGD,IAA1B,CAAkCL,GAAlC,aAA6CE,EAAMI,MAAMD,KAblDE,CAGJ,SAAsCL,EAAkBG,GAE3D,MAAM,GAAN,oBAAWH,EAAMI,MAAM,EAAGD,IAA1B,aAAqCH,EAAMI,MAAMD,EAAQ,KAL9BG,CAAoBN,EAAOC,GAAOH,EAAQI,ICUlE,IAAMK,GAAkB,SAC3BC,EACAC,GAEA,OAAQA,EAAOC,MACf,IAAK,mBACDF,EAAMG,YAAcF,EAAOG,QAC3B,MAEJ,IAAK,eACD,IAAMhB,EAAGiB,cACTL,EAAMM,UAAUC,KAAK,CACjBnB,GAAIA,EACJhB,KAAM6B,EAAOG,QACbI,QAAS,KAEb,MAEJ,IAAK,gBACD,MAAoBP,EAAOG,QAApBhC,EAAP,EAAOA,KAAMgB,EAAb,EAAaA,GACPO,EAAQK,EAAMM,UAAUjB,WAAU,SAAAoB,GAAQ,OAAIA,EAASrB,KAAOA,KACpEY,EAAMM,UAAUX,GAAOvB,KAAKA,EAC5B,MAEJ,IAAK,aACD,MAA6B6B,EAAOG,QAA5BhC,EAAR,EAAQA,KAAMsC,EAAd,EAAcA,WACRC,EAAsBzB,GAAoBc,EAAMM,UAAWI,GACjEV,EAAMM,UAAUK,GAAqBH,QAAQD,KAAK,CAC9CnB,GAAIiB,cACJjC,SAEJ,MAEJ,IAAK,cACD,MAA+B6B,EAAOG,QAA/BhC,EAAP,EAAOA,KAAMsC,EAAb,EAAaA,WAAYtB,EAAzB,EAAyBA,GACnBuB,EAAsBzB,GAAoBc,EAAMM,UAAWI,GAC3Df,EAAMK,EAAMM,UAAUK,GAAqBH,QAAQnB,WAAU,SAAAuB,GAAM,OAAIA,EAAOxB,KAAOA,KAC3FY,EAAMM,UAAUK,GAAqBH,QAAQb,GAAOvB,KAAKA,EACzD,MAEJ,IAAK,gBACD,MAAyB6B,EAAOG,QAAzBM,EAAP,EAAOA,WAAYtB,EAAnB,EAAmBA,GACbuB,EAAsBzB,GAAoBc,EAAMM,UAAWI,GACjEV,EAAMM,UAAUK,GAAqBH,QAAQR,EAAMM,UAAUK,GAAqBH,QAAQK,QAAO,SAAAD,GAAM,OAAIA,EAAOxB,KAAOA,KACzH,MAEJ,IAAK,qBACD,IAAOsB,EAAcT,EAAOG,QAArBM,WAEDC,EAAsBzB,GAAoBc,EAAMM,UAAWI,GACjEV,EAAMM,UAAUK,GAAqBH,QAAQR,EAAMM,UAAUK,GAAqBH,QAAQK,QAAO,SAAAD,GAAM,MAF5F,QAEgGA,EAAOxB,MAClH,MAEJ,IAAK,qBACD,MAA+Ba,EAAOG,QAA/BhC,EAAP,EAAOA,KAAMsC,EAAb,EAAaA,WAAYtB,EAAzB,EAAyBA,GACnBuB,EAAsBzB,GAAoBc,EAAMM,UAAWI,GACjEV,EAAMM,UAAU,GAAGE,QAAQD,KAAK,CAC5BnB,GAAIiB,cACJjC,SAEJ4B,EAAMM,UAAUK,GAAqBH,QAAQR,EAAMM,UAAUK,GAAqBH,QAAQK,QAAO,SAAAD,GAAM,OAAIA,EAAOxB,KAAOA,KAEzH,MAEJ,IAAK,kBACD,IAAMA,EAAKa,EAAOG,QAClBJ,EAAMM,UAAUN,EAAMM,UAAUO,QAAO,SAAAJ,GAAQ,OAAIA,EAASrB,KAAOA,KACnE,MAEJ,IAAK,uBACDY,EAAMM,UAAUN,EAAMM,UAAUV,MAAM,EAAE,GACxC,MAEJ,IAAK,gBACD,MAA+BK,EAAOG,QAA9BU,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACbC,EAAY9B,GAAoBc,EAAMM,UAAWQ,GACjDG,EAAa/B,GAAoBc,EAAMM,UAAWS,GACxDf,EAAMM,UAAYf,GAAWS,EAAMM,UAAWU,EAAWC,GACzD,MAEJ,IAAK,cACD,MAKIhB,EAAOG,QAJPc,EADJ,EACIA,gBACAC,EAFJ,EAEIA,gBACAC,EAHJ,EAGIA,iBACAC,EAJJ,EAIIA,iBAGEC,EAAsBpC,GACxBc,EAAMM,UACNc,GAEET,EAAsBzB,GACxBc,EAAMM,UACNe,GAGEL,EAAY9B,GACdc,EAAMM,UAAUgB,GAAqBd,QACrCU,GAGED,EAAaE,EACbjC,GACEc,EAAMM,UAAUK,GAAqBH,QACrCW,GAEF,EACA7B,EAASU,EAAMM,UAAUgB,GAAqBd,QAAQQ,GAG5DhB,EAAMM,UAAUgB,GAAqBd,QAAQe,OAAOP,EAAW,GAG/DhB,EAAMM,UAAUK,GAAqBH,QAAQe,OAAON,EAAY,EAAG3B,KC7HrEkC,GAAkBC,wBAAoC,IAQrD,IAAMC,GAAoB,CAC7BvB,YAAa,KACbG,UAAW,CACP,CACIlB,GAAI,IACJhB,KAAM,uBACNoC,QAAS,CAAC,CAACpB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,8BAA8B,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,KAAMhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,8BAA8B,CAACgB,GAAI,MAAOhB,KAAM,8BAEvb,CACIgB,GAAI,IACJhB,KAAM,wBACNoC,QAAS,CAAC,CAACpB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,oBAEhM,CACIgB,GAAI,IACJhB,KAAM,0BACNoC,QAAS,CAAC,CAACpB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,sBAAsB,CAACgB,GAAI,MAAOhB,KAAM,kBAAkB,CAACgB,GAAI,MAAOhB,KAAM,sBAcvLuD,GAAc,WACvB,OAAOC,qBAAWJ,KAGTK,GAAuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,EAA0BC,YAAgBhC,GAAiB2B,IAA3D,mBAAOM,EAAP,KAAcC,EAAd,KAEQ9B,EAA2B6B,EAA3B7B,YAAaG,EAAc0B,EAAd1B,UAIrB,OACI,cAACkB,GAAgBU,SAAjB,CAA0B3D,MAAO,CAAE4B,cAAaG,YAAW6B,uBAJhC,SAAC/C,GAAgB,IAAD,EAC3C,OAAO,UAAAkB,EAAU8B,MAAK,SAAC3B,GAAD,OAAcA,EAASrB,KAAOA,YAA7C,eAAkDoB,UAAW,IAGeyB,YAAnF,SACKH,K,SCiCAO,GAAY,SACrBjE,EACAsC,GAFqB,MAIX,CACVR,KAAM,aACNE,QAAS,CACLhC,OACAsC,gBA4BK4B,GAAmB,SAC5B5B,GAD4B,MAElB,CACVR,KAAM,qBACNE,QAAS,CACLM,gBAwBK6B,GAAe,SACxBnE,EACAgB,GAFwB,MAGd,CACVc,KAAM,gBACNE,QAAS,CACLhC,OACAgB,QA0BKoD,GAAiB,SAC1BrC,GAD0B,MAEhB,CACVD,KAAM,mBACNE,QAASD,IAGAZ,GAAa,SACtB2B,EACAC,EACAC,EACAC,GAJsB,MAKZ,CACVnB,KAAM,cACNE,QAAS,CACLc,kBACAC,kBACAC,mBACAC,sB,SC7MKoB,GAAc,SAACC,GACxB,IAAQT,EAAaN,KAAbM,SACR,EAA0BU,aAAQ,CAC9BzC,KAAMwC,EAAKxC,KACXwC,KAAM,WAEF,OADAT,EAASO,GAAeE,IACjBA,GAEXE,IAAK,kBAAMX,EAASO,GAAe,UANvC,mBAASK,EAAT,KAAeC,EAAf,KAWA,OAHA/E,qBAAU,WACN+E,EAAQC,eAAiB,CAAEC,sBAAsB,MAClD,CAACF,IACG,CAAED,S,SClBAnG,GAAW,SACpByD,EACA8C,EACA7D,EACA5C,GAEA,OAAO0G,SACF1G,GACD2D,GACAA,EAAYD,OAAS+C,GACrB9C,EAAYf,KAAOA,I,kBCDd+D,GAAa,SAAC5G,GACvB,MAAgC5C,oBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACQb,EAA2B5B,EAA3B4B,MAAOc,EAAoB1C,EAApB0C,iBAEf,OAAIF,EAEI,cAAC,EAAD,CACIZ,MAAK,+GAAE,SAAAC,GACHD,EAAMC,GACNY,GAAY,QAOxB,cAAC1B,EAAD,CAAkBF,MAAM,EAAOrB,QAAS,kBAAMiD,GAAY,IAA1D,SACKC,KCRAmE,GAAa,SAAC,GAKU,IAJjChF,EAIgC,EAJhCA,KACAgB,EAGgC,EAHhCA,GACAsB,EAEgC,EAFhCA,WACAlE,EACgC,EADhCA,UAEA,EAAkCmF,KAA1BxB,EAAR,EAAQA,YAAa8B,EAArB,EAAqBA,SACfpE,EAAMC,iBAAuB,MAC3B+E,EAASJ,GAAY,CACzBvC,KAAM,aACNd,KACAhB,OACAsC,eAJImC,KAMR,EAAiBQ,aAAQ,CACrBC,OAAQ,aACRC,MAFqB,WAGZpD,GAGoB,eAArBA,EAAYD,MAGZC,EAAYf,KAAOA,GAGvB6C,EACI1C,GAAWY,EAAYf,GAAIA,EAAIe,EAAYO,WAAYA,OAOnE,OAFAmC,GAAKW,EAlBL,qBAkBU3F,IAGN,eAACZ,EAAD,CACIP,SAAUA,GAASyD,EAAa,aAAcf,EAAI5C,GAClDA,UAAWA,EACXqB,IAAKA,EAHT,UAKKO,EACD,eAACqF,GAAA,EAAD,WACI,cAAC,GAAD,CACIxE,iBAAiB,OACjBd,MAAO,SAACC,GAAD,OAAU6D,EJ4CX,SACtB7D,EACAsC,EACAtB,GAHsB,MAIZ,CACVc,KAAM,cACNE,QAAS,CACLhC,OACAsC,aACAtB,OIrDsCsE,CAAWtF,EAAKsC,EAAYtB,KACtDhC,MAAI,IAER,cAACuG,GAAA,EAAD,CAAQ7J,MAAOC,GAAO6J,iBAAkB7H,QAAS,kBAAMkG,EJ0EvC,SAC5B7D,EACAsC,EACAtB,GAH4B,MAIlB,CACVc,KAAM,qBACNE,QAAS,CACLhC,OACAsC,aACAtB,OInFwEyE,CAAiBzF,EAAMsC,EAAYtB,KAAnG,mBAGA,cAACuE,GAAA,EAAD,CAAQ7J,MAAOC,GAAO+J,aAAc/H,QAAS,kBAAMkG,EJmDvC,SACxBvB,EACAtB,GAFwB,MAGd,CACVc,KAAM,gBACNE,QAAS,CACLM,aACAtB,OI1DoE2E,CAAarD,EAAYtB,KAArF,2BAQVrF,GAAS,CACX6J,iBAAkB,CACdhJ,MAAO,MACPC,QAAS,UACTE,WAAY,UACZG,cAAe,SACfc,WAAY,SACZgI,MAAO,SAEXF,aAAc,CACVG,UAAW,MACXrJ,MAAO,MACPC,QAAS,UACTE,WAAY,MACZG,cAAe,SACfc,WAAY,SACZgI,MAAO,UCpFFE,GAAe,SAAC,GAAgD,IAA9C/F,EAA6C,EAA7CA,MAC3B,EAAwBxE,mBAAS,IAAjC,mBAAOyE,EAAP,KAAaC,EAAb,KACMC,EAAWV,IAUjB,OACI,eAACL,EAAD,WACI,cAACE,EAAD,CACII,IAAKS,EACLC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,WAdU,SAClBC,GAEkB,UAAdA,EAAMC,KACNV,EAAMC,MAYN,cAACZ,EAAD,CAAiBzB,QAAS,kBAAMoC,EAAMC,IAAtC,uBCnBC+F,GAAoB,SAAC5H,GAC9B,MAAgC5C,oBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACQb,EAA2B5B,EAA3B4B,MAAOc,EAAoB1C,EAApB0C,iBAEf,OAAIF,EAEI,cAAC,GAAD,CACIZ,MAAK,+GAAE,SAAAC,GACHD,EAAMC,GACNY,GAAY,QAOxB,cAAC3B,EAAD,CAAoBD,MAAM,EAAOrB,QAAS,kBAAMiD,GAAY,IAA5D,SACKC,K,SCFAmF,GAAW,SAAC,GAAyD,IAAvDhG,EAAsD,EAAtDA,KAAMgB,EAAgD,EAAhDA,GAAI5C,EAA4C,EAA5CA,UACjC,EAA0DmF,KAAlDxB,EAAR,EAAQA,YAAagC,EAArB,EAAqBA,uBAAwBF,EAA7C,EAA6CA,SACvCzB,EAAU2B,EAAuB/C,GACjCvB,EAAMC,iBAAuB,MACnC,EAAiBuF,aAAQ,CACrBC,OAAQ,CAAC,WAAY,cACrBC,MAFqB,WAGjB,GAAKpD,EAGL,GAAyB,aAArBA,EAAYD,KAAqB,CACjC,GAAIC,EAAYf,KAAOA,EACnB,OAEJ,GAAuB,MAAnBe,EAAYf,GACZ,OAEJ,GAAS,MAALA,EACA,OAGJ6C,EP2IF,CACV/B,KAAM,gBACNE,QAAS,CACLU,UO9I8BX,EAAYf,GP+I1C2B,QO/I8C3B,UACnC,GAAyB,eAArBe,EAAYD,KAAsB,CACzC,GAAIC,EAAYO,aAAetB,EAC3B,OAEJ,GAAIoB,EAAQ6D,OACR,OAGJpC,EACI1C,GAAWY,EAAYf,GAAI,KAAMe,EAAYO,WAAYtB,IAE7D6C,EAASO,GAAe,2BAAKrC,GAAN,IAAmBO,WAAYtB,UA7BzDoE,EAAT,oBAqCA,OADAX,EAFiBJ,GAAY,CAAEvC,KAAM,WAAYd,KAAIhB,SAA7CyE,MAEHW,EAAK3F,IACF,MAALuB,EAEK,eAACpC,EAAD,CACIR,UAAWA,EAEXE,SAAUA,GAASyD,EAAa,WAAYf,EAAI5C,GAHpD,UAKI,cAACH,EAAD,UAAgB+B,IAChB,cAACqF,GAAA,EAAD,UACI,cAACa,GAAA,EAAD,UACI,cAAC,GAAD,CACIrF,iBAAiB,aACjBd,MAAO,SAACC,GAAD,OAAU6D,EAASM,GAAanE,EAAMgB,KAC7ChC,MAAI,QAIhB,cAACqG,GAAA,EAAD,UACI,cAACa,GAAA,EAAD,UACI,cAACX,GAAA,EAAD,CAAQ7J,MAAOC,GAAOwK,uBAAwBxI,QAAS,kBAAMkG,EAASK,GAAiBlD,KAAvF,oCAKR,oBAAItF,MAAOC,GAAOyK,OACjBhE,EAAQiE,KAAI,SAAA7D,GAAM,OACf,cAAC,GAAD,CACIxB,GAAIwB,EAAOxB,GACXsB,WAAYtB,EACZhB,KAAMwC,EAAOxC,MACRwC,EAAOxB,OAGpB,cAAC,EAAD,CACIH,iBAAiB,uBACjBd,MAAO,SAACC,GAAD,OAAU6D,EAASI,GAAUjE,EAAMgB,KAC1ChC,MAAI,OAMZ,eAACJ,EAAD,CACIR,UAAWA,EACXqB,IAAKA,EACLnB,SAAUA,GAASyD,EAAa,WAAYf,EAAI5C,GAHpD,UAKI,cAACH,EAAD,UAAgB+B,IAChB,cAACqF,GAAA,EAAD,UACI,cAACa,GAAA,EAAD,UACI,cAAC,GAAD,CACIrF,iBAAiB,aACjBd,MAAO,SAACC,GAAD,OAAU6D,EAASM,GAAanE,EAAMgB,KAC7ChC,MAAI,QAIhB,eAACqG,GAAA,EAAD,WACI,cAACa,GAAA,EAAD,UACI,cAACX,GAAA,EAAD,CAAQ7J,MAAOC,GAAO2K,qBAAsB3I,QAAS,kBAAMkG,EP8CrD,SAC1B7C,GAD0B,MAEhB,CACVc,KAAM,kBACNE,QAAShB,GOlD+EuF,CAAevF,KAAnF,+BAEJ,cAACkF,GAAA,EAAD,UACI,cAACX,GAAA,EAAD,CAAQ7J,MAAOC,GAAOwK,uBAAwBxI,QAAS,kBAAMkG,EAASK,GAAiBlD,KAAvF,qCAKR,oBAAItF,MAAOC,GAAOyK,OACjBhE,EAAQiE,KAAI,SAAA7D,GAAM,OACf,cAAC,GAAD,CACIxB,GAAIwB,EAAOxB,GACXsB,WAAYtB,EACZhB,KAAMwC,EAAOxC,MACRwC,EAAOxB,OAGpB,cAAC,EAAD,CACIH,iBAAiB,uBACjBd,MAAO,SAACC,GAAD,OAAU6D,EAASI,GAAUjE,EAAMgB,KAC1ChC,MAAI,QAQlBrD,GAAS,CACX2K,qBAAsB,CAClB9J,MAAO,OACPE,OAAQ,oBACRC,WAAY,MACZE,QAAS,OACTC,cAAe,SACfc,WAAY,SACZZ,SAAU,IAEdmJ,uBAAwB,CACpB3J,MAAO,OACPE,OAAQ,gBACRC,WAAY,SACZC,aAAc,OACdC,QAAS,OACTC,cAAe,SACfc,WAAY,SACZZ,SAAU,IAEdoJ,KAAM,CACFI,OAAQ,OACRpK,MAAO,QACPqK,gBAAiB,UCtKZC,GAAkB,WAC3B,IAAQ3E,EAAgBwB,KAAhBxB,YACA4E,EAAkBC,aAAa,SAACC,GAAD,MAAc,CACjDF,cAAeE,EAAQC,4BADnBH,cAGR,OAAO5E,GAAe4E,EAClB,cAACpH,EAAD,UACI,cAAChB,EAAD,CAAoBzC,SAAU6K,EAA9B,SAC0B,aAArB5E,EAAYD,KACT,cAAC,GAAD,CACId,GAAIe,EAAYf,GAChBhB,KAAM+B,EAAY/B,KAClB5B,WAAS,IAGb,cAAC,GAAD,CACIkE,WAAYP,EAAYO,WACxBlE,WAAS,EACT4C,GAAIe,EAAYf,GAChBhB,KAAM+B,EAAY/B,WAKhC,MCxBH,SAASpB,KACZ,MAAgC2E,KAAxBrB,EAAR,EAAQA,UAAW2B,EAAnB,EAAmBA,SACnB,OACI,eAAC/F,EAAD,WACI,cAAC,GAAD,IACCoE,EAAUmE,KAAI,SAAAhE,GAAQ,OACnB,cAAC,GAAD,CAA4BrB,GAAIqB,EAASrB,GAAIhB,KAAMqC,EAASrC,MAA7CqC,EAASrB,OAE5B,eAACqE,GAAA,EAAD,WACI,cAAC,EAAD,CACIxE,iBAAiB,yBACjBd,MAAO,SAAAC,GAAI,OAAI6D,EToIR,SACvB7D,GADuB,MAEb,CACV8B,KAAM,eACNE,QAAShC,GSxI+B+G,CAAY/G,OAExC,cAACuF,GAAA,EAAD,CAAQ7J,MAAOC,GAAO+J,aAAc/H,QAAS,kBAAMkG,ET2JrB,CAC1C/B,KAAM,0BS5JM,wCAOhB,IAAMnG,GAAS,CACX+J,aAAc,CACVe,gBAAiB,MACjB/J,OAAQ,uBACRsK,OAAQ,KACRC,KAAM,IACNzK,MAAO,SClCR,SAAS0K,KACZ,OACI,qBAAKxL,MAAOC,GAAOwL,OAAnB,SACI,+EAAiD,uBAAjD,sDAOZ,IAAMxL,GAAS,CACXwL,OAAQ,CACJV,gBAAiB,aACjB3K,SAAU,QACVY,OAAQ,kBACRsK,OAAQ,IACRC,KAAM,IACNzK,MAAO,OACPgK,OAAQ,OACR/J,QAAS,kBACT2K,UAAW,YCpBZ,SAASC,KACZ,OACI,gCACI,uBACA,0BCFL,SAASC,KACZ,OACI,qBAAK5L,MAAOC,GAAO4L,UAAnB,SACI,eAAClC,GAAA,EAAD,WACI,eAACa,GAAA,EAAD,CAAKxK,MAAOC,GAAOkC,OAAnB,UACI,oBAAInC,MAAOC,GAAO6L,MAAlB,SACI,uDAEJ,oBAAK9L,MAAOC,GAAOoF,QAAnB,SACI,4EAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,8GAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,iLAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,oJAIR,eAACmF,GAAA,EAAD,CAAKxK,MAAOC,GAAOkC,OAAnB,UACI,oBAAInC,MAAOC,GAAO6L,MAAlB,SACI,wDAEJ,oBAAK9L,MAAOC,GAAOoF,QAAnB,SACI,mFAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,yEAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,kFAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,yEAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,mFAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,yEAEJ,oBAAKrF,MAAOC,GAAOoF,QAAnB,SACI,iFAQxB,IAAMpF,GAAS,CACX4L,UAAW,CACP/K,MAAO,MACPO,aAAc,SACdL,OAAQ,QAGZmB,OAAQ,CACJA,OAAQ,YACRrB,MAAO,MACPE,OAAQ,QAEZ8K,MAAO,CAEHC,YAAa,MAGjB1G,QAAS,CACLrE,OAAQ,QACR+K,YAAa,SChERC,GAAM,WACf,OACI,sBAAK3L,UAAY,MAAjB,UACI,cAAC,EAAD,IACA,cAACO,EAAD,IACA,cAACW,EAAD,IACA,cAACqK,GAAD,IACA,cAAC,GAAD,IACA,cAACJ,GAAD,IACA,cAACG,GAAD,QCPGM,GAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCCpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,SACI,cAAC,GAAD,UACI,cAAC,GAAD,UAIZC,SAASC,eAAe,SAM5BhB,O","file":"static/js/main.c0bd2476.chunk.js","sourcesContent":["import Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport ToastHeader from \"react-bootstrap/ToastHeader\";\nimport React, { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport function WelcomePopup(): JSX.Element{\n    const [show, setShow] = useState(false);\n    return(\n        <div style={styles.popup}>\n            <ToastContainer position=\"top-end\" className=\"m-3\">\n                <Toast show={!show} onClose={()=>setShow(!show)}>\n                    <ToastHeader>\n                        <strong className=\"me-auto\">Welcome to the UD CIS Scheduler!</strong>\n                    </ToastHeader>\n                    <Toast.Body> \n                    Please select a major to get started. Required courses will populate for you to build a schedule.\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\nconst styles = {\n    popup: {\n        //background: \"black\",\n        color: \"purple\",\n        fontWeight: 600,\n    },\n} as const;\n","import React from \"react\";\n\nexport function Welcome(): JSX.Element {\n    return(\n        <div style={styles.welcome}>\n            <p>UD CIS Scheduler</p>\n        </div>\n    );\n}\n\nconst styles = {\n    welcome: {\n        width: \"40%\",\n        padding: \"30px 0px 0px 0px\",\n        margin: \"auto\",\n        background: \"white\",\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignCourses: \"center\",\n        fontSize: 30,\n    },\n} as const;\n","import React, {useState} from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nexport function MajorDropdown(): JSX.Element {\n    // Declare concentration\n    type concentration =\n        | \"Click Here To Select A Major\"\n        | \"BS - Computer Science\"\n        | \"BS - Artificial Intelligence Concentration\"\n        | \"BS - Bioinformatics Concentration\"\n        | \"BS - Cybersecurity Concentration\"\n        | \"BS - Data Science Concentration\"\n        | \"BS - High Performance Computing Concentration\"\n        | \"BS - Systems and Networks Concentration\"\n        | \"BS - Theory and Computation Concentration\"\n \n    /*\n    const options =[\"BS - Computer Science\", \"BS - Artificial Intelligence Concentration\", \"BS - Bioinformatics Concentration\",\"BS - Cybersecurity Concentration\", \"BS - Data Science Concentration\", \"BS - High Performance Computing Concentration\", \"BS - Systems and Networks Concentration\", \"BS - Theory and Computation Concentration\"];\n    const defaultOption = \"Click Here To Select A Major  \";\n    const downArrow = String.fromCharCode(11167);\n    */\n    const [conc, setConcentration] = useState<concentration>(\"Click Here To Select A Major\");\n    return(\n        /*<div>\n            <Button style={styles.dropdown}> \n                <DropdownBox \n                    options={options} \n                    value={defaultOption + downArrow}\n                    \n                />\n            </Button>\n        */\n        <div>\n            <Dropdown>\n                {<Dropdown.Toggle style={styles.dropdown}>\n                    {conc}\n                </Dropdown.Toggle>}\n                <Dropdown.Menu style={styles.box}>\n                    <Dropdown.Header>Concentration</Dropdown.Header>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Computer Science\")}>BS - Computer Science</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Artificial Intelligence Concentration\")}>Artificial Intelligence and Robotics</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Bioinformatics Concentration\")}>Bioinformatics</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Cybersecurity Concentration\")}>Cybersecurity</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Data Science Concentration\")}>Data Science </Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - High Performance Computing Concentration\")}>High Performance Computing</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Systems and Networks Concentration\")}>Systems and Networks Concentration</Dropdown.Item>\n                    <Dropdown.Item data-testid=\"option\" onClick={() => setConcentration(\"BS - Theory and Computation Concentration\")}>Theory and Computation</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n        /*\n        <DropdownButton style={styles.dropdown} id=\"dropdown-basic-button\" title=\"Dropdown button\">\n            <DropdownBox options={options} value={defaultOption} placeholder=\"Select an option\"/>\n            <Dropdown.Course href=\"#/action-1\">Action</Dropdown.Course>\n            <Dropdown.Course href=\"#/action-2\">Another action</Dropdown.Course>\n            <Dropdown.Course href=\"#/action-3\">Something else</Dropdown.Course>\n        </DropdownButton>\n    */\n\n    //<DropdownBox options={options} value={defaultOption} placeholder=\"Select an option\" />\n    );\n}\n\nconst styles = {\n    dropdown: {\n        margin: \"10px auto\",\n        background: \"tan\",\n        borderRadius: \"50px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 20,\n        border: \"10px solid black\",\n        color: \"black\",\n        fontWeight: 600,  \n    },\n    box: {\n        borderRadius: \"10px\",\n        border: \"3px solid black\",\n        background: \"lightblue\",\n        fontSize: 20,\n    },\n} as const;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n    align-items: flex-start;\n    background-color: #3179ba;\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    padding: 20px;\n    width: 100%;\n`;\nexport const SemesterTitle = styled.div`\npadding: 6px 16px 12px;\nfont-weight: bold;\n`;\ntype DragPreviewContainerProps = {\n    isHidden?: boolean\n    isPreview?: boolean\n}\nexport const DragPreviewContainer = styled.div<DragPreviewContainerProps>`\n    transform: ${props => props.isPreview ? \"rotate(0deg)\" : undefined};\n    opacity: ${props => props.isHidden ? 0 : 1};\n`;\n\ntype DragPreviewWrapperProps = {\n    position: {\n        x: number\n        y: number\n    }\n}\nexport const DragPreviewWrapper = styled.div.attrs<DragPreviewWrapperProps>(\n    ({ position: { x, y } }) => ({\n        style: {\n            transform: `translate(${x}px, ${y}px)`\n        }\n    })\n) <DragPreviewWrapperProps>``;\n\nexport const SemesterContainer = styled(DragPreviewContainer)`\n    background-color: #ebecf0;\n    width: 300px;\n    min-height: 40px;\n    margin-right: 20px;\n    border-radius: 3px;\n    padding: 8px 8px;\n    flex-grow: 0;\n`;\n\n\nexport const CourseCardContainer = styled(DragPreviewContainer)`\n    background-color: #fff;\n    cursor: pointer;\n    margin-bottom: 0.5rem;\n    padding: 0.5rem 1rem;\n    max-width: 300px;\n    border-radius: 3px;\n    box-shadow: #091e4240 0px 1px 0px 0px;\n`;\n\ntype AddItemButtonProps = {\n    dark?: boolean\n}\n\nexport const AddCourseButton = styled.button<AddItemButtonProps>`\n    background-color: #ffffff3d;\n    border-radius: 3px;\n    border: none;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"};\n    cursor: pointer;\n    max-width: 300px;\n    padding: 10px 12px;\n    text-align: left;\n    transition: background 85ms ease-in;\n    width: 100%;\n    &:hover {\n    background-color: #ffffff52;\n    }\n`;\nexport const EditSemesterButton = styled.button<AddItemButtonProps>`\n    background-color: #3498DB;\n    border-radius: 3px;\n    border: none;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"};\n    cursor: pointer;\n    max-width: 300px;\n    padding: 10px 12px;\n    text-align: center;\n    transition: background 85ms ease-in;\n    width: 100%;\n    &:hover {\n    background-color: #00000000;\n    }\n`;\nexport const EditCourseButton = styled.button<AddItemButtonProps>`\n    background-color: #3498DB;\n\n    border: none;\n    color: ${props => props.dark ? \"#000\" : \"#fff\"};\n    cursor: pointer;\n    max-width: 300px;\n    text-align: center;\n    transition: background 85ms ease-in;\n    width: 33%;\n    &:hover {\n    background-color: #00000000;\n    }\n`;\nexport const NewCourseFormContainer = styled.div`\n    max-width: 300px;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: flex-start;\n`;\n\nexport const NewCourseButton = styled.button`\n    background-color: #5aac44;\n    border-radius: 3px;\n    border: none;\n    box-shadow: none;\n    color: #fff;\n    padding: 6px 12px;\n    text-align: center;\n`;\nexport const NewCourseInput = styled.input`\n    border-radius: 3px;\n    border: none;\n    box-shadow: #091e4240 0px 1px 0px 0px;\n    margin-bottom: 0.5rem;\n    padding: 0.5rem 1rem;\n    width: 100%;\n`;\nexport const CustomDragLayerContainer = styled.div`\n    height: 100%;\n    left: 0;\n    pointer-events: none;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 100;\n`;//rendered first\n","import { useRef, useEffect } from \"react\";\n\n//refs react hook to reference DOM nodes of rendered React elements\nexport const useFocus = ():React.RefObject<HTMLInputElement> => {\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        ref.current?.focus();//ref will be immutable, use ?. to access it\n    }, []);\n    return ref;\n};\n//access the rendered input element","import React, { useState } from \"react\";\nimport { NewCourseFormContainer, NewCourseButton, NewCourseInput } from \"../styles\";\nimport { useFocus } from \"../utils/useFocus\";\n\n\ntype NewCourseFormProps = {\n    onAdd(text: string): void\n}\n\nexport const NewCourseForm = ({ onAdd }: NewCourseFormProps): JSX.Element => {\n    const [text, setText] = useState(\"\");\n    const inputRef = useFocus();\n    //add enter key for create\n    const handleAddText = (\n        event: React.KeyboardEvent<HTMLInputElement>\n    ) => {\n        if (event.key === \"Enter\") {\n            onAdd(text);\n        }\n    };\n        \n    return (\n        <NewCourseFormContainer>\n            <NewCourseInput\n                ref={inputRef}\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                onKeyPress={handleAddText}\n            />\n            <NewCourseButton onClick={() => onAdd(text)}>\n                Create\n            </NewCourseButton>\n        </NewCourseFormContainer>\n    );\n};\n","import React, { useState} from \"react\";\nimport { AddCourseButton } from \"../styles\";\nimport { NewCourseForm } from \"./NewCourseForm\";\n\n\ntype AddNewCourseProps = {\n    onAdd(text: string): void\n    toggleButtonText: string\n    dark?: boolean\n    }\n\nexport const AddNewCourse = (props: AddNewCourseProps): JSX.Element => {\n    const [showForm, setShowForm] = useState(false);\n    const { onAdd, toggleButtonText, dark } = props;\n    \n    if (showForm) {\n        return (\n            <NewCourseForm\n                onAdd={text => {\n                    onAdd(text);\n                    setShowForm(false);\n                }}\n            />\n        );\n    }\n        \n    \n    return (\n        <AddCourseButton dark={dark} onClick={() => setShowForm(true)}>\n            {toggleButtonText}\n        </AddCourseButton>\n    );\n};\n","type Course = {\n    id: string\n}\n\nexport const findCourseIndexById = <TCourse extends Course>(\n    Courses: TCourse[],\n    id: string\n):number => {\n    return Courses.findIndex((Course: TCourse) => Course.id === id);\n};\nexport const moveCourse = <TCourse>(array: TCourse[], from: number, to: number): TCourse[] => {\n    const Course = array[from];\n    return insertCourseAtIndex(removeCourseAtIndex(array, from), Course, to);\n};\n\nexport function removeCourseAtIndex<TCourse>(array: TCourse[], index: number)\n:TCourse[]{\n    return [...array.slice(0, index), ...array.slice(index + 1)];\n}\n\nexport function insertCourseAtIndex<TCourse>(\n    array: TCourse[],\n    Course: TCourse,\n    index: number\n): TCourse[] {\n    return [...array.slice(0, index), Course, ...array.slice(index)];\n}\n    ","//import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { findCourseIndexById, moveCourse } from \"../utils/arrayUtils\";\nimport { DragItem } from \"../components/DragItem\";\nimport { Action } from \"./actions\";\n\nexport type Course = {\n    id: string\n    text: string\n}\n\nexport type Semester = {\n    id: string\n    text: string\n    courses: Course[]\n}\n\nexport type AppState = {\n    draggedItem: DragItem | null\n    semesters: Semester[]\n}\n\nexport const appStateReducer = (\n    draft: AppState,\n    action: Action\n): AppState | void => {\n    switch (action.type) {\n    case \"SET_DRAGGED_ITEM\": {\n        draft.draggedItem = action.payload;\n        break;\n    }\n    case \"ADD_SEMESTER\": {\n        const id=nanoid();\n        draft.semesters.push({\n            id: id,\n            text: action.payload,\n            courses: [],\n        });\n        break;\n    }\n    case \"EDIT_SEMESTER\": {\n        const {text, id } = action.payload;\n        const index = draft.semesters.findIndex(semester => semester.id === id);\n        draft.semesters[index].text=text;\n        break;\n    }\n    case \"ADD_COURSE\": {\n        const { text, semesterId } = action.payload;\n        const targetSemesterIndex = findCourseIndexById(draft.semesters, semesterId);\n        draft.semesters[targetSemesterIndex].courses.push({\n            id: nanoid(),\n            text\n        });\n        break;\n    }\n    case \"EDIT_COURSE\": {\n        const {text, semesterId, id} = action.payload;\n        const targetSemesterIndex = findCourseIndexById(draft.semesters, semesterId);\n        const index=draft.semesters[targetSemesterIndex].courses.findIndex(course => course.id === id);\n        draft.semesters[targetSemesterIndex].courses[index].text=text;\n        break;\n    }\n    case \"DELETE_COURSE\": {\n        const {semesterId, id} = action.payload;\n        const targetSemesterIndex = findCourseIndexById(draft.semesters, semesterId);\n        draft.semesters[targetSemesterIndex].courses=draft.semesters[targetSemesterIndex].courses.filter(course => course.id !== id);\n        break;\n    }\n    case \"DELETE_ALL_COURSES\": {\n        const {semesterId} = action.payload;\n        const id = \"NaN\";\n        const targetSemesterIndex = findCourseIndexById(draft.semesters, semesterId);\n        draft.semesters[targetSemesterIndex].courses=draft.semesters[targetSemesterIndex].courses.filter(course => course.id === id);\n        break;\n    }\n    case \"SOFT_DELETE_COURSE\": {\n        const {text, semesterId, id} = action.payload;\n        const targetSemesterIndex = findCourseIndexById(draft.semesters, semesterId);\n        draft.semesters[0].courses.push({\n            id: nanoid(),\n            text\n        });\n        draft.semesters[targetSemesterIndex].courses=draft.semesters[targetSemesterIndex].courses.filter(course => course.id !== id);\n        //alert(draft.semesters[targetSemesterIndex].courses);\n        break;\n    }\n    case \"DELETE_SEMESTER\": {\n        const id = action.payload;\n        draft.semesters=draft.semesters.filter(semester => semester.id !== id);\n        break;\n    }\n    case \"DELETE_ALL_SEMESTERS\": {\n        draft.semesters=draft.semesters.slice(0,1);\n        break;\n    }\n    case \"MOVE_SEMESTER\": {\n        const { draggedId, hoverId } = action.payload;\n        const dragIndex = findCourseIndexById(draft.semesters, draggedId);\n        const hoverIndex = findCourseIndexById(draft.semesters, hoverId);\n        draft.semesters = moveCourse(draft.semesters, dragIndex, hoverIndex);\n        break;\n    }\n    case \"MOVE_COURSE\": {\n        const {\n            draggedCourseId,\n            hoveredCourseId,\n            sourceSemesterId,\n            targetSemesterId\n        } = action.payload;\n\n        const sourceSemesterIndex = findCourseIndexById(\n            draft.semesters,\n            sourceSemesterId\n        );\n        const targetSemesterIndex = findCourseIndexById(\n            draft.semesters,\n            targetSemesterId\n        );\n\n        const dragIndex = findCourseIndexById(\n            draft.semesters[sourceSemesterIndex].courses,\n            draggedCourseId\n        );\n\n        const hoverIndex = hoveredCourseId\n            ? findCourseIndexById(\n                draft.semesters[targetSemesterIndex].courses,\n                hoveredCourseId\n            )\n            : 0;\n        const Course = draft.semesters[sourceSemesterIndex].courses[dragIndex];\n\n        // Remove the task from the source semester\n        draft.semesters[sourceSemesterIndex].courses.splice(dragIndex, 1);\n\n        // Add the task to the target semester\n        draft.semesters[targetSemesterIndex].courses.splice(hoverIndex, 0, Course);\n        break;\n    }\n    default: {\n        break;\n    }\n    }\n};\n","import React, { createContext, useContext, Dispatch, FC } from \"react\";\nimport { Action } from \"./actions\";\nimport { useImmerReducer } from \"use-immer\";\nimport {\n    appStateReducer,\n    AppState,\n    Semester,\n    Course\n} from \"./appStateReducer\";\nimport { DragItem } from \"../components/DragItem\";\n\nconst AppStateContext = createContext<AppStateContextProps>({} as AppStateContextProps);\n\nexport function deleteSemester(id: string): void {\n    const left = appData.semesters\n        .filter(semester => semester.id !== id);\n    appData.semesters= left;\n}\n\nexport const appData: AppState = {\n    draggedItem: null,\n    semesters: [\n        {\n            id: \"0\",\n            text: \"Required Course List\",\n            courses: [{id: \"c1\", text: \"CISC220: 3 credits\"},{id: \"c2\", text: \"CISC260: 3 credits\"},{id: \"c3\", text: \"MATH210: 3 credits\"},{id: \"c4\", text: \"MATH243: 4 credits\"},{id: \"c5\", text: \"Science & Lab 1: 4 credits\"},{id: \"c6\", text: \"CISC275: 3 credits\"},{id: \"c7\", text: \"CISC355: 3 credits\"},{id: \"c8\", text: \"MATH205: 4 credits\"},{id: \"c9\", text: \"MATH350: 3 credits\"},{id: \"c10\", text: \"Science & Lab 2: 4 credits\"},{id: \"c11\", text: \"Multicultural: 3 credits\"}]\n        },\n        {\n            id: \"1\",\n            text: \"Year 1: Fall Semester\",\n            courses: [{id: \"c12\", text: \"CISC108: 3 credits\"},{id: \"c13\", text: \"EGGG101: 2 credits\"},{id: \"c14\", text: \"MATH241: 4 credits\"},{id: \"c15\", text: \"ENGL110: 3 credits\"},{id: \"c16\", text: \"CAH: 3 credits\"}]\n        },\n        {\n            id: \"2\",\n            text: \"Year 1: Spring Semester\",\n            courses: [{id: \"c17\", text: \"CISC181: 3 credits\"},{id: \"c18\", text: \"CISC210: 3 credits\"},{id: \"c19\", text: \"MATH242: 4 credits\"},{id: \"c20\", text: \"HCC: 3 credits\"},{id: \"c21\", text: \"SBS: 3 credits\"}]\n        } \n    ]\n};\n\ntype AppStateContextProps = {\n    draggedItem: DragItem | null\n    semesters: Semester[]\n    getCoursesBySemesterId(id: string): Course[]\n    dispatch: Dispatch<Action>\n}\n\n    \n//making sure we can access data globally\nexport const useAppState = (): AppStateContextProps => {\n    return useContext(AppStateContext);\n};\n\nexport const AppStateProvider: FC = ({ children }) => {\n    const [state, dispatch] = useImmerReducer(appStateReducer, appData);\n    \n    const { draggedItem, semesters } = state;\n    const getCoursesBySemesterId = (id: string) => {\n        return semesters.find((semester) => semester.id === id)?.courses || [];\n    };\n    return (\n        <AppStateContext.Provider value={{ draggedItem, semesters, getCoursesBySemesterId, dispatch }}>\n            {children}\n        </AppStateContext.Provider>\n    );\n};\n","import { DragItem } from \"../components/DragItem\";\n\n//an action now can resort to one of the forms we passed in, the semester or task\nexport type Action =\n    | {\n        type: \"MOVE_COURSE\"\n        payload: {\n            draggedCourseId: string\n            hoveredCourseId: string | null\n            sourceSemesterId: string\n            targetSemesterId: string\n        }\n    }\n    | {\n        type: \"ADD_SEMESTER\"\n        payload: string\n    }\n    | {\n        type: \"ADD_COURSE\"\n        payload: { text: string; semesterId: string }\n    }\n    | {\n        type: \"MOVE_SEMESTER\"\n        payload: {\n            draggedId: string\n            hoverId: string\n        }\n    }\n    | {\n        type: \"SET_DRAGGED_ITEM\"\n        payload: DragItem | null\n    }\n    | {\n        type: \"DELETE_ALL_SEMESTERS\"\n    }\n    | {\n        type: \"DELETE_SEMESTER\"\n        payload: string\n    }\n    | {\n        type: \"EDIT_SEMESTER\"\n        payload: {\n            text: string\n            id: string\n        }\n    }\n    | {\n        type: \"SOFT_DELETE_COURSE\"\n        payload: {\n            text: string\n            semesterId: string\n            id: string\n        }\n    }\n    | {\n        type: \"DELETE_COURSE\"\n        payload: {\n            semesterId: string\n            id: string\n        }\n    }\n    | {\n        type: \"DELETE_ALL_COURSES\"\n        payload: {\n            semesterId: string\n        }\n    }\n    | {\n        type: \"EDIT_COURSE\"\n        payload: {\n            text: string\n            semesterId: string\n            id: string\n        }\n    }\n\n\n\n/*what I had before I decided to use a discriminated union which\nallows the Typescript to look at the property and understand the other fields\n    interface AddSemesterAction {\n        type: \"ADD_SEMESTER\"\n        payload: string\n    }\n\n    interface AddTaskAction {\n        type: \"ADD_SEMESTER\"\n        payload: { text: string; semesterId: string }\n    }\n\n    type Action = AddSemesterAction | AddTaskAction\n\n*/\n\n\nexport const addCourse = (\n    text: string,\n    semesterId: string,\n    \n): Action => ({\n    type: \"ADD_COURSE\",\n    payload: {\n        text,\n        semesterId,\n    }\n});\n\nexport const editCourse = (\n    text: string,\n    semesterId: string,\n    id: string\n): Action => ({\n    type: \"EDIT_COURSE\",\n    payload: {\n        text,\n        semesterId,\n        id\n    } \n});\n\nexport const deleteCourse = (\n    semesterId: string,\n    id: string,\n): Action => ({\n    type: \"DELETE_COURSE\",\n    payload: {\n        semesterId,\n        id,\n    }\n});\n\nexport const deleteAllCourses = (\n    semesterId: string,\n): Action => ({\n    type: \"DELETE_ALL_COURSES\",\n    payload: {\n        semesterId,\n    }\n});\n\nexport const softDeleteCourse = (\n    text: string,\n    semesterId: string,\n    id: string\n): Action => ({\n    type: \"SOFT_DELETE_COURSE\",\n    payload: {\n        text,\n        semesterId,\n        id\n    }\n});\n\nexport const addSemester = (\n    text: string,\n): Action => ({\n    type: \"ADD_SEMESTER\",\n    payload: text\n});\n\nexport const editSemester = (\n    text: string,\n    id: string,\n): Action => ({\n    type: \"EDIT_SEMESTER\",\n    payload: {\n        text,\n        id\n    } \n});\n\nexport const deleteSemester = (\n    id: string,\n): Action => ({\n    type: \"DELETE_SEMESTER\",\n    payload: id\n});\n\nexport const deleteSemesters = (): Action => ({\n    type: \"DELETE_ALL_SEMESTERS\",\n});\n\nexport const moveSemester = (\n    draggedId: string,\n    hoverId: string,\n): Action => ({\n    type: \"MOVE_SEMESTER\",\n    payload: {\n        draggedId,\n        hoverId,\n    }\n});\n\nexport const setDraggedItem = (\n    draggedItem: DragItem | null,\n): Action => ({\n    type: \"SET_DRAGGED_ITEM\",\n    payload: draggedItem\n});\n\nexport const moveCourse = (\n    draggedCourseId: string,\n    hoveredCourseId: string | null,\n    sourceSemesterId: string,\n    targetSemesterId: string\n): Action => ({\n    type: \"MOVE_COURSE\",\n    payload: {\n        draggedCourseId,\n        hoveredCourseId,\n        sourceSemesterId,\n        targetSemesterId\n    }\n});\n","import { ConnectDragSource, useDrag } from \"react-dnd\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { DragItem } from \"../components/DragItem\";\nimport { setDraggedItem } from \"../state/actions\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport { useEffect } from \"react\";\nexport const useItemDrag = (item: DragItem): {drag: ConnectDragSource} => {\n    const { dispatch } = useAppState();\n    const [, drag, preview] = useDrag({\n        type: item.type,\n        item: () => {\n            dispatch(setDraggedItem(item));\n            return item;\n        },\n        end: () => dispatch(setDraggedItem(null))\n    });\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n    }, [preview]);\n    return { drag };\n};\n","import { DragItem } from \"../components/DragItem\";\nexport const isHidden = (\n    draggedItem: DragItem | null,\n    itemType: string,\n    id: string,\n    isPreview?: boolean\n): boolean => {\n    return Boolean(\n        !isPreview &&\n        draggedItem &&\n        draggedItem.type === itemType &&\n        draggedItem.id === id\n    );\n};\n","import React, { useState} from \"react\";\nimport { EditCourseButton } from \"../styles\";\nimport { NewCourseForm } from \"./NewCourseForm\";\n\ntype EditCourseProps = {\n    onAdd(text: string): void\n    toggleButtonText: string\n    dark?: boolean\n    }\n\nexport const EditCourse = (props: EditCourseProps): JSX.Element => {\n    const [showForm, setShowForm] = useState(false);\n    const { onAdd, toggleButtonText} = props;\n    \n    if (showForm) {\n        return (\n            <NewCourseForm\n                onAdd={text => {\n                    onAdd(text);\n                    setShowForm(false);\n                }}\n            />\n        );\n    }\n    \n    return (\n        <EditCourseButton dark={false} onClick={() => setShowForm(true)}>\n            {toggleButtonText}\n        </EditCourseButton>\n    );\n};\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { CourseCardContainer } from \"../styles\";\nimport { useItemDrag } from \"../utils/useItemDrag\";\nimport { useDrop } from \"react-dnd\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { isHidden } from \"../utils/isHidden\";\nimport { moveCourse } from \"../state/actions\";\nimport { Button, Row } from \"react-bootstrap\";\nimport { deleteCourse, softDeleteCourse, editCourse } from \"../state/actions\";\nimport { EditCourse } from \"./EditCourse\";\n\ntype CourseCardProps = {\n    text: string\n    id: string\n    semesterId: string\n    isPreview?: boolean\n}\n\nexport const CourseCard = ({\n    text,\n    id,\n    semesterId,\n    isPreview\n}: CourseCardProps): JSX.Element => {\n    const { draggedItem, dispatch } = useAppState();\n    const ref = useRef<HTMLDivElement>(null);\n    const { drag } = useItemDrag({\n        type: \"COURSECARD\",\n        id,\n        text,\n        semesterId\n    });\n    const [, drop] = useDrop({\n        accept: \"COURSECARD\",\n        hover() {\n            if (!draggedItem) {\n                return;\n            }\n            if (draggedItem.type !== \"COURSECARD\") {\n                return;\n            }\n            if (draggedItem.id === id) {\n                return;\n            }\n            dispatch(\n                moveCourse(draggedItem.id, id, draggedItem.semesterId, semesterId)\n            );\n        }\n    });\n\n    drag(drop(ref));\n\n    return (\n        <CourseCardContainer\n            isHidden={isHidden(draggedItem, \"COURSECARD\", id, isPreview)}\n            isPreview={isPreview}\n            ref={ref}\n        >\n            {text}\n            <Row>\n                <EditCourse\n                    toggleButtonText=\"Edit\"\n                    onAdd={(text) => dispatch(editCourse(text,semesterId, id))}\n                    dark\n                />\n                <Button style={styles.softDeleteButton} onClick={() => dispatch(softDeleteCourse(text, semesterId, id))}>\n                    Reset\n                </Button>\n                <Button style={styles.deleteButton} onClick={() => dispatch(deleteCourse(semesterId, id))}>\n                    Delete\n                </Button>\n            </Row>\n        </CourseCardContainer>\n    );\n\n};\nconst styles = {\n    softDeleteButton: {\n        width: \"34%\",\n        padding: \"0px 0px\",\n        background: \"#FF7F7F\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        float: \"right\",\n    },\n    deleteButton: {\n        fontColor: \"red\",\n        width: \"33%\",\n        padding: \"0px 0px\",\n        background: \"red\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        float: \"right\",\n    },\n} as const;\n","import React, { useState } from \"react\";\nimport { NewCourseFormContainer, NewCourseButton, NewCourseInput } from \"../styles\";\nimport { useFocus } from \"../utils/useFocus\";\n\n\ntype NewCourseFormProps = {\n    onAdd(text: string): void\n}\n\nexport const NewTitleForm = ({ onAdd }: NewCourseFormProps): JSX.Element => {\n    const [text, setText] = useState(\"\");\n    const inputRef = useFocus();\n    //add enter key for create\n    const handleAddText = (\n        event: React.KeyboardEvent<HTMLInputElement>\n    ) => {\n        if (event.key === \"Enter\") {\n            onAdd(text);\n        }\n    };\n        \n    return (\n        <NewCourseFormContainer>\n            <NewCourseInput\n                ref={inputRef}\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                onKeyPress={handleAddText}\n            />\n            <NewCourseButton onClick={() => onAdd(text)}>\n                Enter\n            </NewCourseButton>\n        </NewCourseFormContainer>\n    );\n};\n","import React, { useState} from \"react\";\nimport { EditSemesterButton } from \"../styles\";\nimport { NewTitleForm } from \"./NewSemesterTitleForm\";\n\ntype EditSemesterTitleProps = {\n    onAdd(text: string): void\n    toggleButtonText: string\n    dark?: boolean\n    }\n\nexport const EditSemesterTitle = (props: EditSemesterTitleProps): JSX.Element => {\n    const [showForm, setShowForm] = useState(false);\n    const { onAdd, toggleButtonText} = props;\n    \n    if (showForm) {\n        return (\n            <NewTitleForm\n                onAdd={text => {\n                    onAdd(text);\n                    setShowForm(false);\n                }}\n            />\n        );\n    }\n    \n    return (\n        <EditSemesterButton dark={false} onClick={() => setShowForm(true)}>\n            {toggleButtonText}\n        </EditSemesterButton>\n    );\n};\n","import React, { useRef} from \"react\";\nimport { SemesterContainer, SemesterTitle } from \"../styles\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { CourseCard } from \"./CourseCard\";\nimport { AddNewCourse } from \"./AddNewCourse\";\nimport { EditSemesterTitle } from \"./EditSemesterTitle\";\nimport { useItemDrag } from \"../utils/useItemDrag\";\nimport { useDrop } from \"react-dnd\";\nimport { isHidden } from \"../utils/isHidden\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport { deleteSemester, editSemester, deleteAllCourses } from \"../state/actions\";\n\nimport {\n    addCourse,\n    moveCourse,\n    moveSemester,\n    setDraggedItem\n} from \"../state/actions\";\n\ntype SemesterProps = {\n    text: string\n    id: string\n    isPreview?: boolean\n} \n\nexport const Semester = ({ text, id, isPreview }: SemesterProps): JSX.Element => {\n    const { draggedItem, getCoursesBySemesterId, dispatch } = useAppState();\n    const courses = getCoursesBySemesterId(id);\n    const ref = useRef<HTMLDivElement>(null);\n    const [, drop] = useDrop({\n        accept: [\"SEMESTER\", \"COURSECARD\"],\n        hover() {\n            if (!draggedItem) {\n                return;\n            }\n            if (draggedItem.type === \"SEMESTER\") {\n                if (draggedItem.id === id) {\n                    return;\n                }\n                if (draggedItem.id === \"0\"){\n                    return;\n                }\n                if (id===\"0\"){\n                    return;\n                }\n\n                dispatch(moveSemester(draggedItem.id, id));\n            } else if (draggedItem.type === \"COURSECARD\"){\n                if (draggedItem.semesterId === id) {\n                    return;\n                }\n                if (courses.length) {\n                    return;\n                }\n\n                dispatch(\n                    moveCourse(draggedItem.id, null, draggedItem.semesterId, id)\n                );\n                dispatch(setDraggedItem({ ...draggedItem, semesterId: id }));\n            }\n        }\n    });\n\n    const { drag } = useItemDrag({ type: \"SEMESTER\", id, text });\n\n    drag(drop(ref));\n    if(id===\"0\"){\n        return (\n            <SemesterContainer\n                isPreview={isPreview}\n                //ref={ref} removing this makes it totally undraggable\n                isHidden={isHidden(draggedItem, \"SEMESTER\", id, isPreview)}\n            >\n                <SemesterTitle>{text}</SemesterTitle>\n                <Row>\n                    <Col>\n                        <EditSemesterTitle\n                            toggleButtonText=\"Edit Title\"\n                            onAdd={(text) => dispatch(editSemester(text, id))}\n                            dark\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button style={styles.deleteAllCoursesButton} onClick={() => dispatch(deleteAllCourses(id))}>\n                            Delete ALL Courses\n                        </Button>\n                    </Col>\n                </Row>\n                <hr style={styles.line} />\n                {courses.map(course => \n                    <CourseCard\n                        id={course.id}\n                        semesterId={id}\n                        text={course.text}\n                        key={course.id}\n                    />\n                )}\n                <AddNewCourse\n                    toggleButtonText=\"+ Add another course\"\n                    onAdd={(text) => dispatch(addCourse(text, id))}\n                    dark\n                />\n            </SemesterContainer>\n        );\n    } else{\n        return(\n            <SemesterContainer\n                isPreview={isPreview}\n                ref={ref}\n                isHidden={isHidden(draggedItem, \"SEMESTER\", id, isPreview)}\n            >\n                <SemesterTitle>{text}</SemesterTitle>\n                <Row>\n                    <Col>\n                        <EditSemesterTitle\n                            toggleButtonText=\"Edit Title\"\n                            onAdd={(text) => dispatch(editSemester(text, id))}\n                            dark\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button style={styles.deleteSemesterButton} onClick={() => dispatch(deleteSemester(id))}>Delete Semester</Button>\n                    </Col>\n                    <Col>\n                        <Button style={styles.deleteAllCoursesButton} onClick={() => dispatch(deleteAllCourses(id))}>\n                            Delete ALL Courses\n                        </Button>\n                    </Col>\n                </Row>\n                <hr style={styles.line} />\n                {courses.map(course => \n                    <CourseCard\n                        id={course.id}\n                        semesterId={id}\n                        text={course.text}\n                        key={course.id}\n                    />\n                )}\n                <AddNewCourse\n                    toggleButtonText=\"+ Add another course\"\n                    onAdd={(text) => dispatch(addCourse(text, id))}\n                    dark\n                />\n                \n            </SemesterContainer>\n        );\n    }\n};\n\nconst styles = {\n    deleteSemesterButton: {\n        width: \"100%\",\n        margin: \"2px auto 10px 0px\", \n        background: \"red\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 15,\n    },\n    deleteAllCoursesButton: {\n        width: \"100%\",\n        margin: \"2px auto 10px\", \n        background: \"maroon\",\n        borderRadius: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        fontSize: 15,\n    },\n    line: {\n        height: \"10px\",\n        color: \"black\",\n        backgroundColor: \"black\",\n    },\n} as const;\n","import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport { Semester } from \"./SemesterList\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport {\n    CustomDragLayerContainer,\n    DragPreviewWrapper\n} from \"../styles\";\nimport { CourseCard } from \"./CourseCard\";\n\nexport const CustomDragLayer = (): JSX.Element | null => {\n    const { draggedItem } = useAppState();\n    const { currentOffset } = useDragLayer((monitor) => ({\n        currentOffset: monitor.getSourceClientOffset()\n    }));\n    return draggedItem && currentOffset ? \n        <CustomDragLayerContainer>\n            <DragPreviewWrapper position={currentOffset}>\n                {draggedItem.type === \"SEMESTER\" ? \n                    <Semester\n                        id={draggedItem.id}\n                        text={draggedItem.text}\n                        isPreview\n                    />\n                    :\n                    <CourseCard\n                        semesterId={draggedItem.semesterId}\n                        isPreview\n                        id={draggedItem.id}\n                        text={draggedItem.text}\n                    />\n                }\n            </DragPreviewWrapper>\n        </CustomDragLayerContainer>\n        : null;\n}; \n","import React from \"react\";\nimport { AppContainer } from \"../styles\";\nimport { AddNewCourse } from \"./AddNewCourse\";\nimport { CustomDragLayer } from \"./CustomDragLayer\";\nimport { useAppState } from \"../state/AppStateContext\";\nimport { addSemester, deleteSemesters } from \"../state/actions\";\nimport { Semester } from \"./SemesterList\";\nimport { Button, Row } from \"react-bootstrap\";\n//import { DeleteSemester } from \"../DeleteSems\"; \n\nexport function SemesterContainer(): JSX.Element {\n    const { semesters, dispatch } = useAppState();\n    return( \n        <AppContainer>\n            <CustomDragLayer />\n            {semesters.map(semester => \n                <Semester key={semester.id} id={semester.id} text={semester.text} />\n            )}\n            <Row>\n                <AddNewCourse\n                    toggleButtonText=\"+ Add another semester\"\n                    onAdd={text => dispatch(addSemester(text))}\n                />\n                <Button style={styles.deleteButton} onClick={() => dispatch(deleteSemesters())}>\n                    Delete all semesters\n                </Button>\n            </Row>\n        </AppContainer>\n    );\n}\nconst styles = {\n    deleteButton: {\n        backgroundColor: \"red\",\n        margin: \"10px -50px 110px 0px\",\n        bottom: \"10\",\n        left: \"0\",\n        width: \"100%\",\n    },\n} as const;\n","import React from \"react\";\n\nexport function Footer(): JSX.Element {\n    return(\n        <div style={styles.footer}>\n            <p>Made for CISC275 at the University of Delaware<br/>\n            &copy; 2021 Tyler Rust, Noah Trungold, James Wan\n            </p>\n        </div>\n    );\n}\n\nconst styles = {\n    footer: {\n        backgroundColor: \"lightgreen\",\n        position: \"fixed\",\n        margin: \"0px 0px 0px 0px\",\n        bottom: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"50px\",\n        padding: \"0px 0px 0px 0px\",\n        boxSizing: \"inherit\",\n    },\n} as const;\n","import React from \"react\";\n\nexport function Space(): JSX.Element {\n    return(\n        <div>\n            <br/>\n            <br/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n\nexport function RequirementsTable(): JSX.Element {\n    return(\n        <div style={styles.container}>\n            <Row>\n                <Col style={styles.border}>\n                    <ul style={styles.title}>\n                        <h5>Degree Requirements</h5>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>EGGG101 satisfies the First Year Seminar.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>ENGL110 is required for all students and should be taken in the first year.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>The University Breadth courses include CAH, HCC, & SBS. These & a Multicultural course are required for the College & University requirements.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>An 8 credit lab sequence from any of the following: PHYS, CHEM, GEOL, or BISC is required for science courses.</p>\n                    </ul>\n                </Col>\n\n                <Col style={styles.border}>\n                    <ul style={styles.title}>\n                        <h5>Course Prerequisites</h5>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>CISC108 is a prerequisite for CISC181 & CISC210.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>MATH241 is a prerequisite for MATH242.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>MATH241 & MATH242 are corequisites for MATH210.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>MATH242 is a prerequisite for MATH243.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>CISC181 & CISC220 are prerequisites for CISC275.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>MATH210 is a prerequisite for MATH205.</p>\n                    </ul>\n                    <ul  style={styles.Courses}>\n                        <p>MATH243 is a prerequisite for MATH350.</p>\n                    </ul>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nconst styles = {\n    container: {\n        width: \"80%\",\n        alignCourses: \"center\",\n        margin: \"auto\",\n\n    },\n    border: {\n        border: \"3px solid\",\n        width: \"80%\",\n        margin: \"10px\",\n    },\n    title: {\n        //margin: \"-10px\",\n        marginRight: \"7%\",\n\n    },\n    Courses: {\n        margin: \"-10px\",\n        marginRight: \"21px\",\n    \n    }\n} as const;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./components/WelcomePopup.css\";\nimport { WelcomePopup } from \"./components/WelcomePopup\";\nimport { Welcome } from \"./components/Welcome\";\nimport { MajorDropdown } from \"./components/MajorDropdown\";\nimport { SemesterContainer } from \"./components/SemesterContainer\";\nimport { Footer } from \"./components/Footer\";\nimport { Space } from \"./components/SpaceBetweenBodyandFooter\";\nimport { RequirementsTable } from \"./components/RequirementsTable\";\n\nexport const App = ():JSX.Element  => {\n    return (\n        <div className = \"App\">\n            <WelcomePopup />\n            <Welcome />\n            <MajorDropdown />\n            <RequirementsTable />\n            <SemesterContainer />\n            <Footer />\n            <Space />\n        </div>\n    );\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppStateProvider } from \"./state/AppStateContext\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend as Backend } from \"react-dnd-html5-backend\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <DndProvider backend={Backend}>\n            <AppStateProvider>\n                <App />\n            </AppStateProvider>\n        </DndProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}